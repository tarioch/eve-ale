{\rtf1\ansi\deff1\adeflang1025
{\fonttbl{\f0\froman\fprq2\fcharset0 Times New Roman;}{\f1\fswiss\fprq2\fcharset0 Arial;}{\f2\fswiss\fprq2\fcharset0 Arial;}{\f3\fnil\fprq0\fcharset0 OpenSymbol{\*\falt Arial Unicode MS};}{\f4\fmodern\fprq1\fcharset0 Courier New;}{\f5\fswiss\fprq2\fcharset0 Calibri;}{\f6\fnil\fprq0\fcharset128 OpenSymbol{\*\falt Arial Unicode MS};}{\f7\fswiss\fprq2\fcharset0 Arial Unicode MS;}{\f8\fswiss\fprq2\fcharset0 Tahoma;}{\f9\fnil\fprq0\fcharset0 Tahoma;}}
{\colortbl;\red0\green0\blue0;\red0\green0\blue128;\red128\green128\blue128;}
{\stylesheet{\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033\snext1 Normal;}
{\s2\sb240\sa120\keepn\ql\rtlch\af8\afs28\lang255\ltrch\dbch\af7\langfe1033\hich\fs28\lang1033\loch\fs28\lang1033\sbasedon1\snext3 Heading;}
{\s3\sa120\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033\sbasedon1\snext3 Body Text;}
{\s4\sa120\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033\sbasedon3\snext4 List;}
{\s5\sb120\sa120\ql\rtlch\af9\afs24\lang255\ai\ltrch\dbch\langfe1033\hich\fs24\lang1033\i\loch\fs24\lang1033\i\sbasedon1\snext5 caption;}
{\s6\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033\sbasedon1\snext6 Index;}
{\s7\sb120\sa120\ql\rtlch\afs24\lang255\ai\ltrch\dbch\langfe1033\hich\fs24\lang1033\i\loch\fs24\lang1033\i\sbasedon1\snext7 caption;}
{\s8\sb240\sa120\keepn\ql\rtlch\af8\afs32\lang255\ab\ltrch\dbch\af7\langfe1033\hich\fs32\lang1033\b\loch\fs32\lang1033\b\sbasedon2\snext8 Contents Heading;}
{\s9\tldot\tqr\tx9637\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033\sbasedon6\snext9 toc 1;}
{\s10\li283\ri0\lin283\rin0\fi0\tldot\tqr\tx9637\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033\sbasedon6\snext10 toc 2;}
{\s11\li566\ri0\lin566\rin0\fi0\tldot\tqr\tx9637\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033\sbasedon6\snext11 toc 3;}
{\*\cs13\cf0\rtlch\af3\afs24\lang255\ltrch\dbch\af3\langfe255\hich\f3\fs24\lang2057\loch\f3\fs24\lang2057 Bullet Symbols;}
{\*\cs14\cf2\ul\ulc0\rtlch\af1\afs24\lang255\ltrch\dbch\af1\langfe255\hich\f1\fs24\lang255\loch\f1\fs24\lang255 Internet link;}
}{\*\listtable{\list\listtemplateid1
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li360}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li720}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li1080}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li1440}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li1800}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li2160}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li2520}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li2880}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li3240}
{\*\soutlvl{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li3600}}\listid1}
{\list\listtemplateid2
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li360}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li720}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li1080}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li1440}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li1800}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li2160}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li2520}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li2880}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li3240}
{\*\soutlvl{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li3600}}\listid2}
{\list\listtemplateid3
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li360}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li720}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li1080}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li1440}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li1800}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li2160}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li2520}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li2880}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li3240}
{\*\soutlvl{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li3600}}\listid3}
{\list\listtemplateid4
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li360}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li720}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li1080}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li1440}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li1800}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li2160}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li2520}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li2880}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li3240}
{\*\soutlvl{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li3600}}\listid4}
{\list\listtemplateid5
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li360}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li720}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li1080}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li1440}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li1800}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li2160}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li2520}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li2880}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li3240}
{\*\soutlvl{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li3600}}\listid5}
}{\listoverridetable{\listoverride\listid1\listoverridecount0\ls0}{\listoverride\listid2\listoverridecount0\ls1}{\listoverride\listid3\listoverridecount0\ls2}{\listoverride\listid4\listoverridecount0\ls3}{\listoverride\listid5\listoverridecount0\ls4}}

{\info{\creatim\yr0\mo0\dy0\hr0\min0}{\author Dustin Tinklin}{\revtim\yr2009\mo1\dy12\hr13\min27}{\printim\yr0\mo0\dy0\hr0\min0}{\comment StarWriter}{\vern3000}}\deftab720
{\*\pgdsctbl
{\pgdsc0\pgdscuse195\pgwsxn11905\pghsxn16837\marglsxn1134\margrsxn1134\margtsxn1134\margbsxn1134\pgdscnxt0 Standard;}
{\pgdsc1\pgdscuse195\pgwsxn12240\pghsxn15840\marglsxn780\margrsxn735\margtsxn1440\margbsxn1440\pgdscnxt1 Standard;}}
{\*\pgdscno1}\paperh15840\paperw12240\margl780\margr735\margt1440\margb1440\sectd\sbknone\pgwsxn12240\pghsxn15840\marglsxn780\margrsxn735\margtsxn1440\margbsxn1440\ftnbj\ftnstart1\ftnrstcont\ftnnar\aenddoc\aftnrstcont\aftnstart1\aftnnrlc
\pard\plain \ltrpar\s1\qc\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0{\rtlch\ltrch\hich\fs28\b\loch\fs28\b PHP EvE API / EvE-Central API Li}}{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0{\rtlch\ltrch\dbch\hich\fs28\b\loch\fs28\b brary (Ale - }{\rtlch\ltrch\dbch\hich\fs28\b\loch\fs28\b API Library for Eve}{\rtlch\ltrch\hich\fs28\b\loch\fs28\b )}}
\par \pard\plain \ltrpar\s1\qc\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033
\par \sect\sbknone\cols1\ltrsect
\pard\plain \ltrpar\s8\sb240\sa120\keepn\ql\rtlch\af8\afs32\lang255\ab\ltrch\dbch\af7\langfe1033\hich\fs32\lang1033\b\loch\fs32\lang1033\b {\rtlch \ltrch\loch\f1\fs32\lang1033\i0\b Table of Contents}
\par \pard\plain \ltrpar\s9\tldot\tqr\tx10725\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 Requirements\tab 3}
\par \pard\plain \ltrpar\s9\tldot\tqr\tx9637\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 Overview\tab 3}
\par \pard\plain \ltrpar\s9\tldot\tqr\tx9637\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 Installation\tab 3}
\par \pard\plain \ltrpar\s9\tldot\tqr\tx9637\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 Basic operation\tab 3}
\par \pard\plain \ltrpar\s9\tldot\tqr\tx9637\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 Error Reporting\tab 5}
\par \pard\plain \ltrpar\s9\tldot\tqr\tx9637\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 Control functions for the EvE API PHP library\tab 6}
\par \pard\plain \ltrpar\s10\tldot\tqr\tx10725\li283\ri0\lin283\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 setCredentials(userid, apikey, charid)\tab 6}
\par \pard\plain \ltrpar\s10\tldot\tqr\tx9637\li283\ri0\lin283\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 getCredentials()\tab 6}
\par \pard\plain \ltrpar\s10\tldot\tqr\tx9637\li283\ri0\lin283\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 getCacheStatus()\tab 6}
\par \pard\plain \ltrpar\s10\tldot\tqr\tx9637\li283\ri0\lin283\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 getApiError()\tab 6}
\par \pard\plain \ltrpar\s10\tldot\tqr\tx9637\li283\ri0\lin283\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 setDebug(bool)\tab 6}
\par \pard\plain \ltrpar\s10\tldot\tqr\tx9637\li283\ri0\lin283\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 getDebug()\tab 7}
\par \pard\plain \ltrpar\s10\tldot\tqr\tx9637\li283\ri0\lin283\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 setUseCache(bool)\tab 7}
\par \pard\plain \ltrpar\s10\tldot\tqr\tx9637\li283\ri0\lin283\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 getUseCache()\tab 7}
\par \pard\plain \ltrpar\s10\tldot\tqr\tx9637\li283\ri0\lin283\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 setCacheDir(dir)\tab 7}
\par \pard\plain \ltrpar\s10\tldot\tqr\tx9637\li283\ri0\lin283\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 getCacheDir()\tab 7}
\par \pard\plain \ltrpar\s10\tldot\tqr\tx9637\li283\ri0\lin283\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 setUserAgent(agent)\tab 7}
\par \pard\plain \ltrpar\s10\tldot\tqr\tx9637\li283\ri0\lin283\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 getUserAgent()\tab 7}
\par \pard\plain \ltrpar\s10\tldot\tqr\tx9637\li283\ri0\lin283\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 setTimeTolerance(tolerance)\tab 8}
\par \pard\plain \ltrpar\s10\tldot\tqr\tx9637\li283\ri0\lin283\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 getTimeTolerance(tolerance)\tab 8}
\par \pard\plain \ltrpar\s10\tldot\tqr\tx9637\li283\ri0\lin283\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 setApiSite(site)\tab 8}
\par \pard\plain \ltrpar\s10\tldot\tqr\tx9637\li283\ri0\lin283\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 getApiSite()\tab 8}
\par \pard\plain \ltrpar\s10\tldot\tqr\tx9637\li283\ri0\lin283\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 setApiSiteEvEC(site)\tab 8}
\par \pard\plain \ltrpar\s10\tldot\tqr\tx9637\li283\ri0\lin283\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 getApiSiteEvEC()\tab 8}
\par \pard\plain \ltrpar\s10\tldot\tqr\tx9637\li283\ri0\lin283\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 printErrors()\tab 8}
\par \pard\plain \ltrpar\s9\tldot\tqr\tx10725\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 Implemented EvE API functions\tab 9}
\par \pard\plain \ltrpar\s10\tldot\tqr\tx10725\li283\ri0\lin283\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 Account Functions\tab 9}
\par \pard\plain \ltrpar\s11\tldot\tqr\tx10725\li566\ri0\lin566\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 Characters\tab 9}
\par \pard\plain \ltrpar\s10\tldot\tqr\tx10725\li283\ri0\lin283\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 Character Functions\tab 10}
\par \pard\plain \ltrpar\s11\tldot\tqr\tx10725\li566\ri0\lin566\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 Character Sheet\tab 10}
\par \pard\plain \ltrpar\s11\tldot\tqr\tx9637\li566\ri0\lin566\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 Skill in Training \tab 10}
\par \pard\plain \ltrpar\s10\tldot\tqr\tx10725\li283\ri0\lin283\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 Character or Corporation Functions\tab 11}
\par \pard\plain \ltrpar\s11\tldot\tqr\tx10725\li566\ri0\lin566\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 Account Balance\tab 11}
\par \pard\plain \ltrpar\s11\tldot\tqr\tx9637\li566\ri0\lin566\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 Asset List\tab 11}
\par \pard\plain \ltrpar\s11\tldot\tqr\tx9637\li566\ri0\lin566\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 Factional Warfare Statistics\tab 12}
\par \pard\plain \ltrpar\s11\tldot\tqr\tx9637\li566\ri0\lin566\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 Industry Jobs\tab 12}
\par \pard\plain \ltrpar\s11\tldot\tqr\tx9637\li566\ri0\lin566\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 Kill Log (Killmails)\tab 13}
\par \pard\plain \ltrpar\s11\tldot\tqr\tx9637\li566\ri0\lin566\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 Market Orders\tab 13}
\par \pard\plain \ltrpar\s11\tldot\tqr\tx9637\li566\ri0\lin566\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 Medals\tab 14}
\par \pard\plain \ltrpar\s11\tldot\tqr\tx9637\li566\ri0\lin566\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 Standings\tab 14}
\par \pard\plain \ltrpar\s11\tldot\tqr\tx9637\li566\ri0\lin566\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 Wallet Journal Entries \tab 15}
\par \pard\plain \ltrpar\s11\tldot\tqr\tx9637\li566\ri0\lin566\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 Wallet (Market)Transactions\tab 16}
\par \pard\plain \ltrpar\s10\tldot\tqr\tx10725\li283\ri0\lin283\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 Corporation Functions\tab 17}
\par \pard\plain \ltrpar\s11\tldot\tqr\tx10725\li566\ri0\lin566\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 Container Log\tab 17}
\par \pard\plain \ltrpar\s11\tldot\tqr\tx9637\li566\ri0\lin566\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 Corporation Sheet \tab 17}
\par \pard\plain \ltrpar\s11\tldot\tqr\tx9637\li566\ri0\lin566\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 Member Medals\tab 18}
\par \pard\plain \ltrpar\s11\tldot\tqr\tx9637\li566\ri0\lin566\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 Member Security\tab 18}
\par \pard\plain \ltrpar\s11\tldot\tqr\tx9637\li566\ri0\lin566\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 Member Security Log\tab 19}
\par \pard\plain \ltrpar\s11\tldot\tqr\tx9637\li566\ri0\lin566\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 Member Tracking\tab 19}
\par \pard\plain \ltrpar\s11\tldot\tqr\tx9637\li566\ri0\lin566\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 Shareholders\tab 20}
\par \pard\plain \ltrpar\s11\tldot\tqr\tx9637\li566\ri0\lin566\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 Starbase (POS) Details\tab 20}
\par \pard\plain \ltrpar\s11\tldot\tqr\tx9637\li566\ri0\lin566\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 Starbase (POS) List\tab 21}
\par \pard\plain \ltrpar\s11\tldot\tqr\tx9637\li566\ri0\lin566\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 Titles\tab 21}
\par \pard\plain \ltrpar\s10\tldot\tqr\tx10725\li283\ri0\lin283\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 EvE Global Functions\tab 22}
\par \pard\plain \ltrpar\s11\tldot\tqr\tx10725\li566\ri0\lin566\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 Alliance List\tab 22}
\par \pard\plain \ltrpar\s11\tldot\tqr\tx9637\li566\ri0\lin566\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 Certificate Tree \tab 22}
\par \pard\plain \ltrpar\s11\tldot\tqr\tx9637\li566\ri0\lin566\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 Conquerable Station/Outpost List \tab 23}
\par \pard\plain \ltrpar\s11\tldot\tqr\tx9637\li566\ri0\lin566\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 Error List \tab 23}
\par \pard\plain \ltrpar\s11\tldot\tqr\tx9637\li566\ri0\lin566\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 Factional Warfare Top 100 Stats\tab 24}
\par \pard\plain \ltrpar\s11\tldot\tqr\tx9637\li566\ri0\lin566\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 ID to Name Conversion (undocumented, \'93CharacterName\'94)\tab 24}
\par \pard\plain \ltrpar\s11\tldot\tqr\tx9637\li566\ri0\lin566\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 Name to ID Conversion (\'93CharacterID\'94)\tab 25}
\par \pard\plain \ltrpar\s11\tldot\tqr\tx9637\li566\ri0\lin566\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 ID to Character Portrait\tab 25}
\par \pard\plain \ltrpar\s11\tldot\tqr\tx9637\li566\ri0\lin566\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 RefTypes List\tab 26}
\par \pard\plain \ltrpar\s11\tldot\tqr\tx9637\li566\ri0\lin566\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 Server Status\tab 26}
\par \pard\plain \ltrpar\s11\tldot\tqr\tx9637\li566\ri0\lin566\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 Skill Tree\tab 27}
\par \pard\plain \ltrpar\s10\tldot\tqr\tx10725\li283\ri0\lin283\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 Map Functions\tab 27}
\par \pard\plain \ltrpar\s11\tldot\tqr\tx10725\li566\ri0\lin566\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 Factional Warfare Occupancy Map\tab 27}
\par \pard\plain \ltrpar\s11\tldot\tqr\tx9637\li566\ri0\lin566\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 Jumps\tab 28}
\par \pard\plain \ltrpar\s11\tldot\tqr\tx9637\li566\ri0\lin566\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 Kills \tab 28}
\par \pard\plain \ltrpar\s11\tldot\tqr\tx9637\li566\ri0\lin566\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 Sovereignty\tab 29}
\par \pard\plain \ltrpar\s9\tldot\tqr\tx10725\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 EvE-Central functions\tab 29}
\par \pard\plain \ltrpar\s10\tldot\tqr\tx10725\li283\ri0\lin283\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 Minerals (\'93EvEMon\'94)\tab 29}
\par \pard\plain \ltrpar\s10\tldot\tqr\tx9637\li283\ri0\lin283\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 Quick Look\tab 30}
\par \pard\plain \ltrpar\s10\tldot\tqr\tx9637\li283\ri0\lin283\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 Market Statistics\tab 31}
\par \sect\sectd\sbknone\pgwsxn12240\pghsxn15840\marglsxn780\margrsxn735\margtsxn1440\margbsxn1440
\pard\plain \ltrpar\s1\qc\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \page\pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b Requirements}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 For this library to be useful, you will need:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 - A web server that runs PHP5. Some functions require PHP 5.1.3 or greater; the recommended version would be a recent version of PHP 5.2.x. This library uses SimpleXML.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 - A web server that does not block the fsockopen() function. Unfortunately, many free PHP5 webhosts do block that function.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 - A good deal of patience :)}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b Overview}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 eveapi-php grabs XML data through the EvE API or EvE-Central API, caches it locally in a text file, and parses the XML into an array for further processing by you.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 The caching is a bit naive, but on the upside, very simple to maintain - no DB administration needed. There is no "cleanup" of the cache directory in this code at present. If you are going to use this API to grab data for many different users, that may bec
ome a small nuisance.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b Installation}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Copy the contents of the eveapi directory into a directory on your server. For purposes of this document, the examples will assume that you copied everything into \'91./classes/eveapi\'92.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 The EvE API library defaults to caching its fetches, in accordance with CCP\'92s (and EvE-Central's) wishes. The default caching directory is \'91./xmlcache/\'92.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b Basic operation}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 You will need to use at least two includes in your code: 'class.api.php', which has the core class and does all the actual fetching of data, caching, and so on; and one or more of the parsing class files. In order to choose a character, for example, you'd 
need 'class.charselect.php'.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once('./classes/eveapi/class.api.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once('./classes/eveapi/class.charselect.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 You'll also want the API User ID, API Key, and the character name. Those could be hardcoded or entered on the fly, stored in a DB, whatever. I'll hardcode them here. You get them from http://myeve.eve-online.com/api/, of course.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $apiuser = '12345'; // User ID}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $apipass = '67890'; // API Key - limited or full, depending on what you intend to fetch}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $mychar = 'Win Sauce'; // Character name}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\li15\ri0\lin15\rin0\fi0\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Time to initialize a new Api object. You'll want to decide on whether to debug; and you'll set the credentials. Note we just use User ID and API Key to start. You can only fetch rather limited things with that combo, but that's how we need to start out.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $api = new Api();}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $api->setDebug(true); // When testing and debugging your code \'96 comment out once everything\'92s working}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $api->setCredentials($apiuser,$apipass);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Alright, now we'll go fetch us the character ID for that character name, and we'll grab the corporation ID while we're at it. Fetching anything in the PHP API Library is done in two steps: Get the raw XML, then parse it using a parser class. The function n
ame in Api and in the parsing class is identical, by convention in this library.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $apicharsxml = $api->getCharacters();}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $apichars = Characters::getCharacters($apicharsxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 That was simple enough. Now step through the $apichars array to find the character we'll use.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 foreach($apichars as $index => $thischar)}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 \{}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 \tab if($thischar['charname']==$mychar)}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 \tab \{}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 \tab \tab $apichar=$thischar['charid'];}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 \tab \tab $apicorp=$thischar['corpid'];}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 \tab \}}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 \}}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Really what you\'92d do is present the existing characters to a user to choose from, but this works for a demonstration example.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 At this point, you can continue by grabbing more data, using the $apichar variable. For example, to get a list of the members of your corporation (which assumes an include of class.membertracking.php - remember, each API function has a separate parsing cla
ss):}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 // The following fetch will need our character ID - so set it, now that we have it}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $api->setCredentials($apiuser,$apipass,$apichar); }
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $membersxml = $api->getMemberTracking();}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $members = MemberTracking::getMemberTracking($membersxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 I trust you get the idea. In a nutshell, you use a one-two-punch of grabbing the XML, and then parsing the XML. The names of the parsing and XML grabbing functions are identical, and the name of the parsing class matches the function minus the \'93get\'94. }
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Example: api->getWalletJournal and WalletJournal::getWalletJournal.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Lastly, if you had debug on and you want to output the debug messages, use this:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $api->printErrors();}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 There's an example api-testing.html file included in this release, which shows some of the functions of the API. It fetches hard-coded user ID and API key from config.php, so edit config.php before you upload the code to your server for testing.}
\par \page\pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ab\ltrch\dbch\langfe1033\hich\fs24\lang1033\b\loch\fs24\lang1033\b{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b Error Reporting}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Error reporting is rudimentary in this version of the library. The individual functions will return \'93null\'94 if an API error was encountered. If $api->setDebug(true); has been set, you can print out any encountered errors with $api->printErrors();. Currently
, this also outputs informational debug information, such as cache file creation, cache loading, &c.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 The library offers getApiError() to get the API result code of the last fetch, see the documentation for getApiError(), below.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 If setDebug(false) (the default), PHP warning messages will be suppressed when an API server goes offline. If setDebug(true), then PHP warning messages and the exception created by SimpleXML choking on the 404 page will be shown.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 The library will throw an exception if it detects incorrectly passed parameters. This is a change from previous versions, where the library would silently discard incorrectly passed parameters.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \page\pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ab\ltrch\dbch\langfe1033\hich\fs24\lang1033\b\loch\fs24\lang1033\b{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b Control functions for the EvE API PHP library}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 The examples in this section assume that you created a variable $api for the Api class, like so:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $api = new Api();}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b setCredentials(userid, apikey, charid)}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Set the user ID, API key (full or limited) and character ID to be used in subsequent API operations.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 \line Returns \'93true\'94 if successful, and \'93false\'94 if not.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $api->setCredentials(userid, apikey, charid);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch \'93}{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0\ltrch\hich\fs20\loch\fs20 userid\'94 and \'93apikey\'94 are required parameters, while \'93charid\'94 is optional.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Note that \'93charid\'94 is a numeric value. You can grab it using getCharacters \'96 see above example, please \'96 or using getCharacterID(name);.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 You may also use this function to \'93wipe\'94 previously set authentication, by passing \'93null\'94 for the parameters.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b getCredentials()}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array containing \'91userid\'92, \'91apikey\'92 and \'91charid\'92 indices filled with the vales set previously with the setCredentials call.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $credentials = $api->getCredentials();}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b getCacheStatus()}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Return \'93true\'94 if the previous API call had been serviced from cache, and \'93false\'94 if the previous API call had not been serviced from cache.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $dataxml = $api->getMemberTracking();}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $cached = $api->getCacheStatus(); // Did we just fetch that, or did we get it from our cache?}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b getApiError()}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Return '0' on a successful API call, or the numeric API error code. If you need the plain-text description of that code, please cross-reference it to the output of get}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $dataxml = $api->getMemberTracking();}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $cached = $api->getCacheStatus(); // Did we just fetch that, or did we get it from our cache?}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b setDebug(bool)}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Set debug output to \'93true\'94 or \'93false\'94. It defaults to \'93false\'94.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns \'93true\'94 if successful, and \'93false\'94 if not.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $api->setDebug(true);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \page\pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b getDebug()}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Return the value of the debug level, \'93true\'94 or \'93false\'94.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $debug = $api->getDebug();}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b setUseCache(bool)}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Set caching to \'93true\'94 or \'93false\'94. It defaults to \'93true\'94.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns \'93true\'94 if successful, and \'93false\'94 if not.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $api->setUseCache(false);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b getUseCache()}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Return the value of the caching variable, \'93true\'94 or \'93false\'94.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $caching = $api->getUseCache();}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b setCacheDir(dir)}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Set the caching directory to a string. It defaults to \'93./xmlcache\'94.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns \'93true\'94 if successful, and \'93false\'94 if not.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $api->setCacheDir(\'93/var/tmp/dont-live-in-my-homedir-you-bum/\'94);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b getCacheDir()}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Return the caching directory as a string value.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $cachedir = $api->getCacheDir();}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b setUserAgent(agent)}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Set the HTTP User Agent to a string. It defaults to \'93eve-apiphp-x.x\'94, where \'93x.x\'94 is the version of the library.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns \'93true\'94 if successful, and \'93false\'94 if not.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $api->setUserAgent(\'93FleetManager\'94);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b getUserAgent()}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Return the HTTP User Agent string.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $useragent = $api->getUserAgent();}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b setTimeTolerance(tolerance)}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Set the amount of time in minutes that the API functions will wait after CCP\'92s \'93cachedUntil\'94 time has expired before attempting to call an API function again instead of delivering from cache. Default is 5 minutes. Used to allow some leeway in your server\'92s
 clock being \'93fast\'94 compared to CCP\'92s clock.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns \'93true\'94 if successful, and \'93false\'94 if not.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $api->setTimeTolerance(10); // 5 minutes, pshaw, we need 10}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b getTimeTolerance(tolerance)}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Return the value (in minutes) of the timeTolerance variable.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $tolerance = $api->getTimeTolerance();}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b setApiSite(site)}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Set the value of the URL that the library will use to connect to the EvE API server. Defaults to "api.eve-online.com".}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns \'93true\'94 if successful, and \'93false\'94 if not.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $api->setApiSite(\'93sisi-api.eve-online.com\'94);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b getApiSite()}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Return the apisite URL as a string.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $apisite = $api->getApiSite();}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b setApiSiteEvEC(site)}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Set the value of the URL that the library will use to connect to the EvE-Central API server. Defaults to "eve-central.com".}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns \'93true\'94 if successful, and \'93false\'94 if not.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $api->setApiSiteEvEC(\'93test.eve-central.com\'94);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b getApiSiteEvEC()}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Return the apisiteevec URL as a string.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $apisite = $api->getApiSiteEvEC();}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch  }
\par \pard\plain \ltrpar\s1\ql 
\par \pard\plain \ltrpar\s1\ql{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b printErrors()}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Print debug messages. These may be actual errors, or merely informational debug.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ab\ltrch\dbch\langfe1033\hich\fs24\lang1033\b\loch\fs24\lang1033\b{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b Implemented EvE API functions}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 See the very handy API index at http://wiki.eve-id.net/APIv2_Page_Index for EvE server requirements for each API function and sample output, please.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0{\ltrch\hich\fs20\loch\fs20 The file name and class name of each API function is derived from its URL where possible, with the exception of CharacterPortrait and the EvE-Central Minerals function. E.g.}}{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0{\rtlch\ltrch\dbch\hich\fs20\loch\fs20 , the \'93Factional Warfare Top 100 Stats\'94 are fetched from \'93/eve/FacWarTopStats.xml.a
spx\'94, which means the class is called \'93FacWarTopStats\'94, is kept in \'93class.facwartopstats.php\'94, and the functions for fetching the data are both called getFacWarTopStats - one on the API class, and one on the FacWarTopStats class. }}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Note that all of the fetching functions have an optional \'93timeout\'94 parameter. \'93timeout\'94 is the time to cache the data in minutes. By default, functions will cache for a time specified by CCP in the returned data \'96 with the current exception of WalletJourna
l and WalletTransactions, which default to 65 minutes because CCP\'92s \'93cachedUntil\'94 value for these is broken.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 You can use the test code in the sample directory to print the raw array data of any function, if you need to see how the array is formatted. }
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ab\ltrch\dbch\langfe1033\hich\fs24\lang1033\b\loch\fs24\lang1033\b{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b Account Functions}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b Characters}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Needed to get the char ID, without which a lot of the other fetches don't work.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array if successful, and \'93null\'94 if not.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once('./classes/eveapi/class.characters.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 User ID and limited API Key}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $api->setCredentials($apiuser,$apipass);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $dataxml = $api->getCharacters([timeout]);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $data = Characters::getCharacters($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \page\pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ab\ltrch\dbch\langfe1033\hich\fs24\lang1033\b\loch\fs24\lang1033\b{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b Character Functions}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b Character Sheet}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 A detailed character sheet for one of your characters.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array if successful, and \'93null\'94 if not.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once(\'91./classes/eveapi/class.charactersheet.php\'92);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 This needs the character ID to work, and a limited API key.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $api->setCredentials($apiuser,$apipass,$apichar);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $dataxml=$api->getCharacterSheet([timeout]);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $data = CharacterSheet::getCharacterSheet($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b Skill in Training }
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns the currently training skill for one of your characters. Use the array returned by \'93getSkillTree\'94 to find the name of the skill that corresponds to the id that will be returned.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array if successful, and \'93null\'94 if not.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once(\'91./classes/eveapi/class.skillintraining.php\'92);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 This needs the character ID to work, and a limited API key.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $api->setCredentials($apiuser,$apipass,$apichar);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $dataxml=$api->getSkillInTraining([timeout]);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $data = SkillInTraining::getSkillInTraining($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \page\pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ab\ltrch\dbch\langfe1033\hich\fs24\lang1033\b\loch\fs24\lang1033\b{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b Character or Corporation Functions}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b Account Balance}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\qj\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Grab the Account Balance for either the character, or the corp the character belongs to.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array if successful, and \'93null\'94 if not.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\qj\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\qj\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once('./classes/eveapi/class.accountbalance.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\qj\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\qj\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 This needs the character ID to work.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $api->setCredentials($apiuser,$apipass,$apichar);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\qj\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\qj\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $dataxml = $api->getAccountBalance([corp-bool],[timeout]);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $data = AccountBalance::getAccountBalance($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain {\listtext\pard\plain \li1080\ri0\lin1080\rin0\fi-360\fs20\lang1033\langfe1033\fs20\qj\f3\f3\f3 \'95\tab}\ilvl0 \ltrpar\s1\qj\ls4\li1080\ri0\lin1080\rin0\fi-360\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch \'93}{\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 corp-bool\'94 is \'93true\'94 if you wish to fetch for corp, and \'93false\'94 if you wish to fetch for character. It defaults to \'93false\'94.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b Asset List}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\qj\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Grab the Asset List for either the character, or the corp the character belongs to. In order to fetch for corp, the character has to have the \'93Director\'94 or \'93CEO\'94 role in the corp.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array if successful, and \'93null\'94 if not.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\qj\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\qj\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once('./classes/eveapi/class.assetlist.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\qj\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\qj\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 This needs the character ID and full API key.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $api->setCredentials($apiuser,$apipass,$apichar);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\qj\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\qj\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $dataxml = $api->getAssetList([corp-bool],[timeout]);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $data = AssetList::getAssetList($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch \'93}{\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 corp-bool\'94 is \'93true\'94 if you wish to fetch for corp, and \'93false\'94 if you wish to fetch for character. It defaults to \'93false\'94}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b 
\par \page\pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b Factional Warfare Statistics}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Statistics for Factional war}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array if successful, or \'93null\'94 if not}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once('./classes/eveapi/class.facwarstats.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 This may need the limited or full API key. Exact requirements for fetching for corp unknown \'96 we don't have a factional warfare character to test with.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $dataxml = $api->getFacWarStats([corp-bool],[timeout]);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $data = FacWarStats::getFacWarStats($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch \'93}{\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 corp-bool\'94 is \'93true\'94 if you wish to fetch for corp, and \'93false\'94 if you wish to fetch for character. It defaults to \'93false\'94}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b{ Industry Jobs}}{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b  }
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\qj\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Grab the list of Industry Jobs for either the character, or the corp the character belongs to. To fetch for corp, the character has to have the \'91Factory Manager\'92 role.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array if successful, and \'93null\'94 if not.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\qj\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\qj\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once('./classes/eveapi/class.industryjobs.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\qj\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\qj\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 This needs the character ID and full API key.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $api->setCredentials($apiuser,$apipass,$apichar);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\qj\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\qj\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $dataxml = $api->getIndustryJobs([corp-bool],[timeout]);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $data = IndustryJobs::getIndustryJobs($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch \'93}{\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 corp-bool\'94 is \'93true\'94 if you wish to fetch for corp, and \'93false\'94 if you wish to fetch for character. It defaults to \'93false\'94}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \page\pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b{ Kill Log (Killmails)}}{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b  }
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 A array of killmails for a character or corporation, including all details that are available in game.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array if successful, and \'93null\'94 if not.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once(\'91./classes/eveapi/class.killlog.php\'92);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 This needs the character ID to work. If used for corp, you\'92ll need to be a Director or CEO of your corp.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $api->setCredentials($apiuser,$apipass,$apichar);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\qj\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $dataxml = $api->getKilllog([corp-bool],[timeout]);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $data =  KillLog::getKillLog($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch \'93}{\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 corp-bool\'94 is \'93true\'94 if you wish to fetch for corp, and \'93false\'94 if you wish to fetch for character. It defaults to \'93false\'94}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b{ Market Orders}}{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b  }
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 A list of market orders that are either not expired or have expired in the past week (at most). }
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an Array if successful, and \'93null\'94 if not}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once('./classes/eveapi/class.marketorders.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 This needs the character ID to work. If used for corp, you\'92ll need to have the \'93accountant\'94 role in that corp.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $api->setCredentials($apiuser,$apipass,$apichar);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $dataxml = $api->getMarketOrders([corp-bool],[timeout]);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $data = MarketOrders::getMarketOrders($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch \'93}{\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 corp-bool\'94 is \'93true\'94 if you wish to fetch for corp, and \'93false\'94 if you wish to fetch for character. It defaults to \'93false\'94}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \page\pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0{\rtlch\ltrch\hich\fs22\b\loch\fs22\b Medals}}{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0{\rtlch\ltrch\hich\fs22\loch\fs22  }}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Lists the Medals received or for corporation medals created and awarded.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array if successful, or \'93null\'94 if not}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once('./classes/eveapi/class.medals.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 This needs the character ID to work, and a limited API key.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $dataxml = $api->getMedals([corp-bool],[timeout]);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $data = Medals::getMedals($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch \'93}{\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 corp-bool\'94 is \'93true\'94 if you wish to fetch for corp, and \'93false\'94 if you wish to fetch for character. It defaults to \'93false\'94}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0{\rtlch\ltrch\hich\fs22\b\loch\fs22\b Standings}}{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0{\rtlch\ltrch\hich\fs22\loch\fs22  }}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Lists the standings towards other alliances/corporations/individuals, for either a character or a corporation}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array if successful, or \'93null\'94 if not}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once('./classes/eveapi/class.standings.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 This needs the character ID to work, and a limited or full API key.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $dataxml = $api->getStandings([corp-bool],[timeout]);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $data = Standings::getStandings($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch \'93}{\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 corp-bool\'94 is \'93true\'94 if you wish to fetch for corp, and \'93false\'94 if you wish to fetch for character. It defaults to \'93false\'94}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \page\pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0{\rtlch\ltrch\hich\fs22\b\loch\fs22\b Wallet Journal Entries}}{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0{\rtlch\ltrch\hich\fs22\loch\fs22  }}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 A detailed wallet journal (like the one in the EvE UI) showing transactions up to one week back. Returns a maximum of 1000 entries in one go, but can be run multiple times to get more than 1000 entries, as long as they are not older than one week.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 CCP recommends to run this function, and run it again until it returns less than 1000 entries, for simplicity\'92s sake.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Common error codes to be returned by this function during iteration are \'93101: Wallet exhausted\'94 and \'93103: Already returned one week of data\'94.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array if successful, and \'93null\'94 if not.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once(\'91./classes/eveapi/class.walletjournal.php\'92);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 This needs the character ID to work, and a full API key. If used for corp, you\'92ll need to have the \'93junior accountant\'94 role in that corp.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $api->setCredentials($apiuser,$apipass,$apichar);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $dataxml=$api->getWalletJournal([refid],[corp-bool],[accountkey],[timeout]);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $data = WalletJournal::getWalletJournal($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain {\listtext\pard\plain \li1080\ri0\lin1080\rin0\fi-360\lang1033\langfe1033\f3\f3\f3 \'95\tab}\ilvl0 \ltrpar\s1\ls3\li1080\ri0\lin1080\rin0\fi-360\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033{\rtlch\ltrch\hich\loch{\rtlch \ltrch\loch \'93}}{{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 refid\'94 \'96 if specified, you will get up to 1000 entries }}{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0{\rtlch\ltrch\hich\fs20\i\loch\fs20\i before}{\rtlch\ltrch\hich\fs20\loch\fs20  that refid. If not specified, you will get the newest entries, up to 1000.}}
\par \pard\plain {\listtext\pard\plain \li1080\ri0\lin1080\rin0\fi-360\fs20\lang1033\langfe1033\fs20\f3\f3\f3 \'95\tab}\ilvl0 \ltrpar\s1\ls3\li1080\ri0\lin1080\rin0\fi-360\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch \'93}{\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 corp-bool\'94 is \'93true\'94 if you wish to fetch for corp, and \'93false\'94 if you wish to fetch for character. It defaults to \'93false\'94.}
\par \pard\plain {\listtext\pard\plain \li1080\ri0\lin1080\rin0\fi-360\fs20\lang1033\langfe1033\fs20\f3\f3\f3 \'95\tab}\ilvl0 \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch \'93}{\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 accountkey\'94 defaults to \'931000\'94, which is the corp master wallet or the char wallet. Other possible values are 1001 through 1006, for the available corp wallet divisions.}
\par \pard\plain {\listtext\pard\plain \li1080\ri0\lin1080\rin0\fi-360\fs20\lang1033\langfe1033\fs20\f3\f3\f3 \'95\tab}\ilvl0 \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch \'93}{\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 timeout\'94 defaults to 65 minutes, because the \'93cachedUntil\'94 value for this function is broken as of Empyrian Age 1.0.1}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \page\pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b{ Wallet (Market)Transactions}}{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b  }
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 A detailed view of wallet market transactions (like the one in the EvE UI) showing transactions up to one week back. Returns a maximum of 1000 entries in one go, but can be run multiple times to get more than 1000 entries, as long as they are not older tha
n one week.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 CCP recommends to run this function, and run it again until it returns less than 1000 entries, for simplicity\'92s sake.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Common error codes to be returned by this function during iteration are \'93101: Wallet exhausted\'94 and \'93103: Already returned one week of data\'94.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array if successful, and \'93null\'94 if not.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once(\'91./classes/eveapi/class.wallettransactions.php\'92);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 This needs the character ID to work, and a full API key. If used for corp, you\'92ll need to have the \'93junior accountant\'94 role in that corp.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $api->setCredentials($apiuser,$apipass,$apichar);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $dataxml=$api->getWalletTransactions([transid],[corp-bool],[accountkey],[timeout]);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $data = WalletTransactions::getWalletTransactions($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain {\listtext\pard\plain \li1080\ri0\lin1080\rin0\fi-360\lang1033\langfe1033\f3\f3\f3 \'95\tab}\ilvl0 \ltrpar\s1\ls2\li1080\ri0\lin1080\rin0\fi-360\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033{\rtlch\ltrch\hich\loch{\rtlch \ltrch\loch \'93}}{{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 transid\'94 \'96 if specified, you will get up to 1000 entries }}{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0{\rtlch\ltrch\hich\fs20\i\loch\fs20\i before}{\rtlch\ltrch\hich\fs20\loch\fs20  that transid. If not specified, you will get the newest entries, up to 1000.}}
\par \pard\plain {\listtext\pard\plain \li1080\ri0\lin1080\rin0\fi-360\fs20\lang1033\langfe1033\fs20\f3\f3\f3 \'95\tab}\ilvl0 \ltrpar\s1\ls2\li1080\ri0\lin1080\rin0\fi-360\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch \'93}{\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 corp-bool\'94 is \'93true\'94 if you wish to fetch for corp, and \'93false\'94 if you wish to fetch for character. It defaults to \'93false\'94.}
\par \pard\plain {\listtext\pard\plain \li1080\ri0\lin1080\rin0\fi-360\fs20\lang1033\langfe1033\fs20\f3\f3\f3 \'95\tab}\ilvl0 \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch \'93}{\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 accountkey\'94 defaults to \'931000\'94, which is the corp master wallet or the char wallet. Other possible values are 1001 through 1006, for the available corp wallet divisions.}
\par \pard\plain {\listtext\pard\plain \li1080\ri0\lin1080\rin0\fi-360\fs20\lang1033\langfe1033\fs20\f3\f3\f3 \'95\tab}\ilvl0 \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch \'93}{\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 timeout\'94 defaults to 65 minutes, because the \'93cachedUntil\'94 value for this function is broken as of Empyrian Age 1.0.1}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \page\pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ab\ltrch\dbch\langfe1033\hich\fs24\lang1033\b\loch\fs24\lang1033\b{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b Corporation Functions}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b{ Container Log}}{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b  }
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Return a list of all containers owned by the corporation, and their contents.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array if successful, and \'93null\'94 if not.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once(\'91./classes/eveapi/class.containerlog.php\'92);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 This needs the character ID to work, and a full API key. A CEO or Director key is required.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $api->setCredentials($apiuser,$apipass,$apichar);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $dataxml=$api->getContainerLog([timeout]);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $data = ContainerLog::getContainerLog($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b Corporation Sheet }
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 A detailed corporation sheet for the corporation you are a member of. Can also be used to see information about corporations in an alliance.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array if successful, and \'93null\'94 if not.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once(\'91./classes/eveapi/class.corporationsheet.php\'92);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 This needs the character ID to work, and a limited or full API key. A CEO or Director will see more data than a member.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $api->setCredentials($apiuser,$apipass,$apichar);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $dataxml=$api->getCorporationSheet([corpid],[timeout]);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $data = CorporationSheet::getCorporationSheet($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain {\listtext\pard\plain \li360\ri0\lin360\rin0\fi-360\fs20\lang1033\langfe1033\fs20\f3\f3\f3 \'95\tab}\ilvl0 \ltrpar\s1\ls1\li360\ri0\lin360\rin0\fi-360\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch \'93}{\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 corpid\'94 is to be used if you wish to see information about a corporation in an alliance. If omitted, information about your character\'92s corp is returned.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \page\pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b Member Medals}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 List the medals awarded to a corporation's members.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array if successful, or \'93null\'94 if not}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once('./classes/eveapi/class.membermedals.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 This needs the character ID to work, and a limited or full API key.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $dataxml = $api->getMemberMedals([timeout]);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $data = MemberMedals::getMemberMedals($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b Member Security}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 List the security roles of a corporation's members.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array if successful, or \'93null\'94 if not}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once('./classes/eveapi/class.membersecurity.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 This needs the character ID to work, and a full API key. A CEO or Director key is required.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $dataxml = $api->getMemberSecurity([timeout]);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $data = MemberSecurity::getMemberSecurity($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \page\pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b Member Security Log}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 List information about the changes in security roles of a corporation's members, and the member who made the changes.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array if successful, or \'93null\'94 if not}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once('./classes/eveapi/class.membersecuritylog.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 This needs the character ID to work, and a full API key. A CEO or Director key is required.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $dataxml = $api->getMemberSecurityLog([timeout]);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $data = MemberSecurity::getMemberSecurityLog($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b Member Tracking}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Get a list of a corporation's members. CEOs and Directors will see more information.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array if successful, or \'93null\'94 if not}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once('./classes/eveapi/class.membertracking.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 This needs the character ID to work, and a full API key.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $dataxml = $api->getMemberTracking([timeout]);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $data = MemberTracking::getMemberTracking($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \page\pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b Shareholders}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns the character and corporation share holders of a corporation. }
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array if successful, or \'93null\'94 if not}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once('./classes/eveapi/class.shareholders.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 This needs the character ID to work, and a full API key. A CEO or Director key is required.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $dataxml = $api->getShareHolders([timeout]);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $data = ShareHolders::getShareHolders($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b Starbase (POS) Details}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns details about a particular starbase that belongs to your corp. You\'92ll need to have CEO or Director roles to get this list.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array if successful, and \'93null\'94 if not.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once(\'91./classes/eveapi/class.starbasedetail.php\'92);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 This needs the character ID to work, and a full API key.  You\'92ll need to be a Director or CEO of your corp}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $api->setCredentials($apiuser,$apipass,$apichar);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0{\rtlch\ltrch\hich\fs20\loch\fs20 $dataxml=$api->}}{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0{\rtlch\ltrch\hich\f5\fs22\loch\f5\fs22  }{\rtlch\ltrch\hich\fs20\loch\fs20 getStarbaseDetail ($id,[timeout]);}}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0{\rtlch\ltrch\hich\fs20\loch\fs20 $data = StarbaseDetail::}}{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0{\rtlch\ltrch\hich\f5\fs22\loch\f5\fs22  }{\rtlch\ltrch\hich\fs20\loch\fs20 getStarbaseDetail ($dataxml);}}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain {\listtext\pard\plain \li360\ri0\lin360\rin0\fi-360\fs20\lang1033\langfe1033\fs20\f3\f3\f3 \'95\tab}\ilvl0 \ltrpar\s1\ls0\li360\ri0\lin360\rin0\fi-360\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 id \'96 This is the ID of the POS as returned by getStarbaseList}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \page\pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b Starbase (POS) List}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns a list of starbases that belong to your corp. You\'92ll need to have CEO or Director roles to get this list.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array if successful, and \'93null\'94 if not.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once(\'91./classes/eveapi/class.starbaselist.php\'92);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 This needs the character ID to work, and a full API key. You\'92ll need to be a Director or CEO of your corp.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $api->setCredentials($apiuser,$apipass,$apichar);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0{\rtlch\ltrch\hich\fs20\loch\fs20 $dataxml=$api->}}{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0{\rtlch\ltrch\hich\f5\fs22\loch\f5\fs22  }{\rtlch\ltrch\hich\fs20\loch\fs20 getStarbaseList ([timeout]);}}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $data = StarbaseList::{\rtlch\ltrch\hich\f5\fs22\loch\f5\fs22  }getStarbaseList ($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b Titles}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 List the titles held by a corporation's members. }
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array if successful, or \'93null\'94 if not}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once('./classes/eveapi/class.titles.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 This needs the character ID to work, and a full API key. A CEO or Director key is required.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $dataxml = $api->getTitles([timeout]);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $data = Titles::getTitles($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \page\pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ab\ltrch\dbch\langfe1033\hich\fs24\lang1033\b\loch\fs24\lang1033\b{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b EvE Global Functions}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b Alliance List}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns all of the member corp IDs of a particular alliance, which can then be used when fetching the corp sheet data. This is a global fetch, no authentication is needed. }
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array if successful, and \'93null\'94 if not.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once('./classes/eveapi/class.alliancelist.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 None}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $dataxml = $api->getAllianceList([timeout]);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $data = AllianceList::getAllianceList($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b Certificate Tree }
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Lists certificates and their requirements.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array if successful, or \'93null\'94 if not}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once('./classes/eveapi/class.certificatetree.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 None}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $dataxml = $api->getCertificateTree([timeout]);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $data = CertificateTree::getCertificateTree($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \page\pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b Conquerable Station/Outpost List }
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Lists station ID, name,station type ID, solar system ID,  corporation ID and corporation name of conquerable stations.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once('./classes/eveapi/class.conquerablestationlist.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 None.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $dataxml = $api->getConquerableStationList([timeout]);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $data = ConquerableStationList::getConquerableStationList($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b Error List }
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 A list of API error codes and their plain-text descriptions. This is a global fetch, no authentication is needed.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array if successful, and \'93null\'94 if not.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once('./classes/eveapi/class.alliancelist.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 None}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $dataxml = $api->getAllianceList([timeout]);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $data = AllianceList::getAllianceList($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \page\pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b Factional Warfare Top 100 Stats}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 List the top 100 in factional warfare }
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array if successful, or \'93null\'94 if not}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once('./classes/eveapi/class.facwartopstats.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 None}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $dataxml = $api->getFacWarTopStats([timeout]);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $data = FacWarTopStats::getFacWarTopStats($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b ID to Name Conversion (undocumented, \'93CharacterName\'94)}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Lists the names of the IDs passed to it. I can resolve most IDs, including alliances, corporations, characters, factions and item types.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array if successful, or \'93null\'94 if not}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe1033\hich\f4\fs20\lang2057\loch\f4\fs20\lang2057 {\rtlch \ltrch\loch\f4\fs20\lang2057\i0\b0 require_once('./classes/eveapi/class.charactername.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 None}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe1033\hich\f4\fs20\lang2057\loch\f4\fs20\lang2057 {\rtlch \ltrch\loch\f4\fs20\lang2057\i0\b0 $dataxml = $api->getCharacterName(ids,[timeout]);}
\par \pard\plain \ltrpar\s1\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe1033\hich\f4\fs20\lang2057\loch\f4\fs20\lang2057 {\rtlch \ltrch\loch\f4\fs20\lang2057\i0\b0 $data = CharacterName::getCharacterName($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch \'93}{\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 ids\'94 is a comma-separated list of IDs}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \page\pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0{\rtlch\ltrch\hich\fs22\b\loch\fs22\b Name to ID Conversion}}{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0{\rtlch\ltrch\dbch\hich\fs22\b\loch\fs22\b  (\'93CharacterID\'94)}}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Lists IDs of the names you have passed to it. It can be alliance, corporation or characters.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array if successful, or \'93null\'94 if not.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe1033\hich\fs20\lang2057\loch\fs20\lang2057 {\rtlch \ltrch\loch\f1\fs20\lang2057\i0\b0 require_once('./classes/eveapi/class.characterid.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 none}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe1033\hich\fs20\lang2057\loch\fs20\lang2057 {\rtlch \ltrch\loch\f1\fs20\lang2057\i0\b0 $dataxml = $api->getCharacterID(names,[timeout]);}
\par \pard\plain \ltrpar\s1\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe1033\hich\fs20\lang2057\loch\fs20\lang2057 {\rtlch \ltrch\loch\f1\fs20\lang2057\i0\b0 $data = CharacterID::getCharacterID($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch \'93}{\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 names\'94 is a comma-separated list of names}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b{ ID to Character Portrait}}{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b  }
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 When called this function returns the portrait of the character that corresponds to the ID passed to it. Unlike all other EvE API functions, it does not return XML, but a path to a JPEG file. Therefore, there is no corresponding \'93parse\'94 function or class.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns the path to the fetched JPEG if successful, or \'93null\'94 if not.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe1033\hich\fs20\lang2057\loch\fs20\lang2057 {\rtlch \ltrch\loch\f1\fs20\lang2057\i0\b0 require_once('./classes/eveapi/class.api.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 None}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe1033\hich\fs20\lang2057\loch\fs20\lang2057 {\rtlch \ltrch\loch\f1\fs20\lang2057\i0\b0 $path = $api->getCharacterPortrait(id,[size],[timeout]);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain {\listtext\pard\plain \li1080\ri0\lin1080\rin0\fi-360\fs20\lang1033\langfe1033\fs20\f3\f3\f3 \'95\tab}\ilvl0 \ltrpar\s1\ls2\li1080\ri0\lin1080\rin0\fi-360\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch \'93}{\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 id\'94 \'96 The ID of the character whose portrait you are fetching.}
\par \pard\plain {\listtext\pard\plain \li1080\ri0\lin1080\rin0\fi-360\fs20\lang1033\langfe1033\fs20\f3\f3\f3 \'95\tab}\ilvl0 \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch \'93}{\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 size\'94 - The size of the portrait. The EvE API currently recognizes the values \'9364\'94 and \'93256\'94}
\par \pard\plain {\listtext\pard\plain \li1080\ri0\lin1080\rin0\fi-360\fs20\lang1033\langfe1033\fs20\f3\f3\f3 \'95\tab}\ilvl0 \ltrpar\s1\ls2\li1080\ri0\lin1080\rin0\fi-360\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch \'93}{\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 timeout\'94 defaults to 1440 minutes}
\par \pard\plain \ltrpar\s1\li360\ri0\lin360\rin0\fi0\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \page\pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b{ RefTypes List}}{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b  }
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Gets a complete list of refTypes, which are needed to map the data returned by getWalletJournal and getWalletTransactions into types of transactions, such as \'93Player Donation\'94. This is a global fetch, no authentication is  needed. }
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array if successful, and \'93null\'94 if not.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once('./classes/eveapi/class.reftypes.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 None}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $dataxml = $api->getRefTypes([timeout]);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $data = RefTypes::getRefTypes($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b Server Status}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Lists the status of the server and number of pilots online.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array if successful, or \'93null\'94 if not}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once('./classes/eveapi/class.serverstatus.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 None}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $dataxml = $api->getServerStatus([timeout]);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $data = ServerStatus::getServerStatus($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \page\pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b Skill Tree}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns the complete EvE-Online Skill Tree. Useful, for example, for mapping the id of SkillInTraining to a skill name.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once('./classes/eveapi/class.skilltree.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 None}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $dataxml = $api->getSkillTree([timeout]);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $data = SkillTree::getSkillTree($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ab\ltrch\dbch\langfe1033\hich\fs24\lang1033\b\loch\fs24\lang1033\b{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b Map Functions}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0{\rtlch\ltrch\hich\fs22\b\loch\fs22\b Factional Warfare Occupancy Map}}{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0{\rtlch\ltrch\hich\fs22\loch\fs22  }}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Lists the systems occupied by factions in the faction war system .}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array if successful, or \'93null\'94 if not}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once('./c{lasses/eveapi/class.f}{\rtlch\ltrch\dbchacwarsystems}{.php}');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 None}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0{\rtlch\ltrch\dbch\hich\fs20\loch\fs20 $dataxml = $api->get}}{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0{\rtlch\ltrch\dbch\hich\fs20\loch\fs20 FacWarSystems}{\rtlch\ltrch\dbch\hich\fs20\loch\fs20 ([timeout]);}}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $data = FacWarSystems::get{\rtlch\ltrch\dbchFacWarSystems}($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b 
\par \page\pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0{\rtlch\ltrch\hich\fs22\b\loch\fs22\b Jumps}}{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0{\rtlch\ltrch\hich\fs20\loch\fs20  }}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns the number of ship jumps for each solar system in the last hour. If a system is not listed it has had no jumps.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array if successful, and \'93null\'94 if not.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once('./classes/eveapi/class.jumps.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 None}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $dataxml = $api->getJumps([timeout]);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $data = Jumps::getJumps($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b Kills }
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Lists the number of kills within solar systems in the last hour. If a system is not listed it has had no kills.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array if successful, and \'93null\'94 if not.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once('./classes/eveapi/class.kills.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 None}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $dataxml = $api->getKills([timeout]);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $data = Kills::getKills($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \page\pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0{\rtlch\ltrch\hich\fs22\b\loch\fs22\b Sovereignty}}{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0{\rtlch\ltrch\hich\fs22\loch\fs22  }}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Lists Solar systems and which factions or alliances claim them.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array if successful, or \'93null\'94 if not}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once('./classes/eveapi/class.sovereignty.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 None}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $dataxml = $api->getSovereignty([timeout]);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $data = Sovereignty::getSovereignty($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ab\ltrch\dbch\langfe1033\hich\fs24\lang1033\b\loch\fs24\lang1033\b{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b EvE-Central functions}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 The EvE-Central API is provided by eve-central.com. Neither the API nor the data returned by it are maintained by CCP.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b Minerals (\'93EvEMon\'94)}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Retrieve the median mineral prices in the empire regions in a format dige{stable by EvEMon.}}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once('./classes/eveapi/class.minerals.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 None}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $dataxml = $api->getMinerals([timeout]);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $data = Minerals::getMinerals($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain {\listtext\pard\plain \li1080\ri0\lin1080\rin0\fi-360\fs20\lang1033\langfe1033\fs20\f3\f3\f3 \'95\tab}\ilvl0 \ltrpar\s1\ls3\li1080\ri0\lin1080\rin0\fi-360\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch \'93}{\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 timeout\'94 defaults to 30 minutes.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \page\pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b Quick Look}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Retrieve all of the available market orders, including prices, stations, order IDs, volumes, etc. }
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array if successful, and \'93null\'94 if not.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once(\'91./classes/eveapi/class.quicklook.php\'92);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 None}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $dataxml=$api->getQuickLook(typeid,[sethours],[regionlimit],[usesystem],[setminQ],[timeout]);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $data = QuickLook::getQuickLook($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain {\listtext\pard\plain \li1080\ri0\lin1080\rin0\fi-360\fs20\lang1033\langfe1033\fs20\f3\f3\f3 \'95\tab}\ilvl0 \ltrpar\s1\ls3\li1080\ri0\lin1080\rin0\fi-360\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch \'93}{\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 typeid\'94 \'96 The type ID of the item you wish to see market orders for. This ID can be gotten from the EvE data dump.}
\par \pard\plain {\listtext\pard\plain \li1080\ri0\lin1080\rin0\fi-360\lang1033\langfe1033\f3\f3\f3 \'95\tab}\ilvl0 \ltrpar\s1\ls3\li1080\ri0\lin1080\rin0\fi-360\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033{\rtlch\ltrch\hich\loch{\rtlch \ltrch\loch \'93}}{{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 sethours\'94  \'96 }}{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0{\rtlch\ltrch\dbch\hich\fs20\loch\fs20 Get orders which have been posted within the last X hours. Defaults to 360}{\rtlch\ltrch\hich\fs20\loch\fs20 .}}
\par \pard\plain {\listtext\pard\plain \li1080\ri0\lin1080\rin0\fi-360\lang1033\langfe1033\f3\f3\f3 \'95\tab}\ilvl0 \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033{\rtlch\ltrch\hich\loch{\rtlch \ltrch\loch \'93}}{{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 regionlimit\'94  \'96 }}{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0{\rtlch\ltrch\dbch\hich\fs20\loch\fs20 Restrict the view to only show from within the specified region IDs. These Ids can be gotten from the EvE data dump. Can be specified multiple times. If specifying multiple times, pass an array of region IDs; otherwise, pass a numeric valu
e.}}
\par \pard\plain {\listtext\pard\plain \li1080\ri0\lin1080\rin0\fi-360\fs20\lang1033\fs20\langfe1033\fs20\f3\f3\f3 \'95\tab}\ilvl0 \ltrpar\s1\ls3\li1080\ri0\lin1080\rin0\fi-360\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 usesystem \'96 Restrict the view to this system only, specified by system ID. This ID can be gotten from the EvE data dump.}
\par \pard\plain {\listtext\pard\plain \li1080\ri0\lin1080\rin0\fi-360\fs20\lang1033\fs20\langfe1033\fs20\f3\f3\f3 \'95\tab}\ilvl0 \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 setminQ \'96 Restrict the view to show only orders above the specified quantity.}
\par \pard\plain {\listtext\pard\plain \li1080\ri0\lin1080\rin0\fi-360\fs20\lang1033\fs20\langfe1033\fs20\f3\f3\f3 \'95\tab}\ilvl0 \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch \'93}{\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 timeout\'94 defaults to 30 minutes.}
\par \pard\plain {\listtext\pard\plain \li360\ri0\lin360\rin0\fi-360\fs20\lang1033\fs20\langfe1033\fs20\f3\f3\f3 \'95\tab}\ilvl0 \ltrpar\s1\li360\ri0\lin360\rin0\fi-360\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \page\pard\plain {\listtext\pard\plain \li360\ri0\lin360\rin0\fi-360\fs20\lang1033\fs20\langfe1033\fs20\f3\f3\f3 \'95\tab}\ilvl0 \ltrpar\s1\li360\ri0\lin360\rin0\fi-360\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b{\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b Market Statistics}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Retrieve aggregate statistics for the items specified. }
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array if successful, and \'93null\'94 if not.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once(\'91./classes/eveapi/class.marketstat.php\'92);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 None}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $dataxml=$api->getMarketStat(typeid,[sethours],[regionlimit],[setminQ],[timeout]);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $data = MarketStat::getMarketStat($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain {\listtext\pard\plain \li1080\ri0\lin1080\rin0\fi-360\lang1033\langfe1033\f3\f3\f3 \'95\tab}\ilvl0 \ltrpar\s1\ls3\li1080\ri0\lin1080\rin0\fi-360\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033{\rtlch\ltrch\hich\loch{\rtlch \ltrch\loch \'93}}{{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 typeid\'94 \'96 The type ID of the item you wish to see market orders for. This ID can be gotten from the EvE data dump. }}{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0{\rtlch\ltrch\dbch\hich\fs20\loch\fs20 Can be specified multiple times. If specifying multiple times, pass an array of type IDs; otherwise, pass a numeric value.}}
\par \pard\plain {\listtext\pard\plain \li1080\ri0\lin1080\rin0\fi-360\lang1033\langfe1033\f3\f3\f3 \'95\tab}\ilvl0 \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033{\rtlch\ltrch\hich\loch{\rtlch \ltrch\loch \'93}}{{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 sethours\'94  \'96 }}{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0{\rtlch\ltrch\dbch\hich\fs20\loch\fs20 Get orders which have been posted within the last X hours. Defaults to 360??}{\rtlch\ltrch\hich\fs20\loch\fs20 .}}
\par \pard\plain {\listtext\pard\plain \li1080\ri0\lin1080\rin0\fi-360\lang1033\langfe1033\f3\f3\f3 \'95\tab}\ilvl0 \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033{\rtlch\ltrch\hich\loch{\rtlch \ltrch\loch \'93}}{{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 regionlimit\'94  \'96 }}{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0{\rtlch\ltrch\dbch\hich\fs20\loch\fs20 Restrict statistics to specific region IDs. These IDs can be gotten from the EvE data dump. Can be specified multiple times. If specifying multiple times, pass an array of region IDs; otherwise, pass a numeric value.}}
\par \pard\plain {\listtext\pard\plain \li1080\ri0\lin1080\rin0\fi-360\fs20\lang1033\fs20\langfe1033\fs20\f3\f3\f3 \'95\tab}\ilvl0 \ltrpar\s1\ls3\li1080\ri0\lin1080\rin0\fi-360\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 setminQ \'96 The minimum quantity in an order to consider it for the statistics .}
\par \pard\plain {\listtext\pard\plain \li1080\ri0\lin1080\rin0\fi-360\fs20\lang1033\fs20\langfe1033\fs20\f3\f3\f3 \'95\tab}\ilvl0 \ltrpar\s1\ls3\li1080\ri0\lin1080\rin0\fi-360\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch \'93}{\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 timeout\'94 defaults to 30 minutes.}
\par }