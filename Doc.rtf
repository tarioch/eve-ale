{\rtf1\adeflang1025\ansi\ansicpg1252\uc1\adeff0\deff0\stshfdbch0\stshfloch38\stshfhich38\stshfbi0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}{\f10\fnil\fcharset2\fprq2{\*\panose 05000000000000000000}Wingdings;}
{\f38\fswiss\fcharset0\fprq2{\*\panose 020f0502020204030204}Calibri;}{\f206\froman\fcharset238\fprq2 Times New Roman CE;}{\f207\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f209\froman\fcharset161\fprq2 Times New Roman Greek;}
{\f210\froman\fcharset162\fprq2 Times New Roman Tur;}{\f211\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f212\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f213\froman\fcharset186\fprq2 Times New Roman Baltic;}
{\f214\froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\f216\fswiss\fcharset238\fprq2 Arial CE;}{\f217\fswiss\fcharset204\fprq2 Arial Cyr;}{\f219\fswiss\fcharset161\fprq2 Arial Greek;}{\f220\fswiss\fcharset162\fprq2 Arial Tur;}
{\f221\fbidi \fswiss\fcharset177\fprq2 Arial (Hebrew);}{\f222\fbidi \fswiss\fcharset178\fprq2 Arial (Arabic);}{\f223\fswiss\fcharset186\fprq2 Arial Baltic;}{\f224\fswiss\fcharset163\fprq2 Arial (Vietnamese);}
{\f226\fmodern\fcharset238\fprq1 Courier New CE;}{\f227\fmodern\fcharset204\fprq1 Courier New Cyr;}{\f229\fmodern\fcharset161\fprq1 Courier New Greek;}{\f230\fmodern\fcharset162\fprq1 Courier New Tur;}
{\f231\fbidi \fmodern\fcharset177\fprq1 Courier New (Hebrew);}{\f232\fbidi \fmodern\fcharset178\fprq1 Courier New (Arabic);}{\f233\fmodern\fcharset186\fprq1 Courier New Baltic;}{\f234\fmodern\fcharset163\fprq1 Courier New (Vietnamese);}
{\f586\fswiss\fcharset238\fprq2 Calibri CE;}{\f587\fswiss\fcharset204\fprq2 Calibri Cyr;}{\f589\fswiss\fcharset161\fprq2 Calibri Greek;}{\f590\fswiss\fcharset162\fprq2 Calibri Tur;}{\f593\fswiss\fcharset186\fprq2 Calibri Baltic;}}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;
\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\ql \li0\ri0\sa200\sl276\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 
\af0\afs22\alang1025 \ltrch\fcs0 \f38\fs22\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext0 Normal;}{\*\cs10 \additive \ssemihidden Default Paragraph Font;}{\*
\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tblind0\tblindtype3\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv 
\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20 \ltrch\fcs0 \f38\fs20\lang1024\langfe1024\cgrid\langnp1024\langfenp1024 \snext11 \ssemihidden Normal Table;}}
{\*\latentstyles\lsdstimax156\lsdlockeddef0{\lsdlockedexcept Normal;heading 1;heading 2;heading 3;heading 4;heading 5;heading 6;heading 7;heading 8;heading 9;toc 1;toc 2;toc 3;toc 4;toc 5;toc 6;toc 7;toc 8;toc 9;caption;Title;Default Paragraph Font;Subtitle;Strong;Emphasis;Table Grid;}}
{\*\listtable{\list\listtemplateid295339150\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat0\levelspace0\levelindent0{\leveltext\leveltemplateid-1310300374\'01-;}{\levelnumbers;}\loch\af1\hich\af1\dbch\af0\fbias0 
\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li1440\lin1440 }{\listlevel\levelnfc23
\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li2160\lin2160 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0
\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li2880\lin2880 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1
\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li3600\lin3600 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0
{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li4320\lin4320 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67698689
\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li5040\lin5040 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 
\fi-360\li5760\lin5760 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li6480\lin6480 }{\listname 
;}\listid510485644}{\list\listtemplateid-884698792\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 
\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li1440\lin1440 }{\listlevel
\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li2160\lin2160 }{\listlevel\levelnfc23\levelnfcn23\leveljc0
\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li2880\lin2880 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0
\levelstartat1\lvltentative\levelspace360\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li3600\lin3600 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360
\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li4320\lin4320 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360\levelindent0{\leveltext
\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li5040\lin5040 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360\levelindent0{\leveltext\leveltemplateid67698691
\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li5760\lin5760 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}
\f10\fbias0 \fi-360\li6480\lin6480 }{\listname ;}\listid518545947}{\list\listtemplateid-1436748220\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698689
\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 
\fi-360\li1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li2160\lin2160 }
{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li2880\lin2880 }{\listlevel\levelnfc23\levelnfcn23
\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li3600\lin3600 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0
\levelstartat1\lvltentative\levelspace360\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li4320\lin4320 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative
\levelspace360\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li5040\lin5040 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360\levelindent0
{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li5760\lin5760 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360\levelindent0{\leveltext\leveltemplateid67698693
\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li6480\lin6480 }{\listname ;}\listid754472687}{\list\listtemplateid-783254916\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0
{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360\levelindent0{\leveltext\leveltemplateid67698691
\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}
\f10\fbias0 \fi-360\li2160\lin2160 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 
\fi-360\li2880\lin2880 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li3600\lin3600 }{\listlevel
\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li4320\lin4320 }{\listlevel\levelnfc23\levelnfcn23\leveljc0
\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li5040\lin5040 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0
\levelstartat1\lvltentative\levelspace360\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li5760\lin5760 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360
\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li6480\lin6480 }{\listname ;}\listid1134904203}{\list\listtemplateid300045444\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0
\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360
\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360\levelindent0{\leveltext
\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li2160\lin2160 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360\levelindent0{\leveltext\leveltemplateid67698689
\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li2880\lin2880 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 
\fi-360\li3600\lin3600 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li4320\lin4320 }
{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li5040\lin5040 }{\listlevel\levelnfc23\levelnfcn23
\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li5760\lin5760 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0
\levelstartat1\lvltentative\levelspace360\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li6480\lin6480 }{\listname ;}\listid1171138679}{\list\listtemplateid-1589451614\listhybrid{\listlevel\levelnfc23
\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0
\levelstartat1\lvltentative\levelspace360\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360
\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li2160\lin2160 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360\levelindent0{\leveltext
\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li2880\lin2880 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360\levelindent0{\leveltext\leveltemplateid67698691
\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li3600\lin3600 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}
\f10\fbias0 \fi-360\li4320\lin4320 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 
\fi-360\li5040\lin5040 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li5760\lin5760 }{\listlevel
\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li6480\lin6480 }{\listname ;}\listid1450277994}
{\list\listtemplateid1876977746\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720\lin720 }
{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23
\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li2160\lin2160 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0
\levelstartat1\lvltentative\levelspace360\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li2880\lin2880 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative
\levelspace360\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li3600\lin3600 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360\levelindent0{\leveltext
\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li4320\lin4320 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360\levelindent0{\leveltext\leveltemplateid67698689
\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li5040\lin5040 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 
\fi-360\li5760\lin5760 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li6480\lin6480 }
{\listname ;}\listid1554075707}{\list\listtemplateid2011331266\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}
\f3\fbias0 \fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li1440\lin1440 }
{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li2160\lin2160 }{\listlevel\levelnfc23
\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li2880\lin2880 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0
\levelfollow0\levelstartat1\lvltentative\levelspace360\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li3600\lin3600 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative
\levelspace360\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li4320\lin4320 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360\levelindent0
{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li5040\lin5040 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360\levelindent0{\leveltext
\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li5760\lin5760 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360\levelindent0{\leveltext\leveltemplateid67698693
\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li6480\lin6480 }{\listname ;}\listid1962297980}}{\*\listoverridetable{\listoverride\listid518545947\listoverridecount0\ls1}{\listoverride\listid754472687\listoverridecount0\ls2}
{\listoverride\listid1962297980\listoverridecount0\ls3}{\listoverride\listid1134904203\listoverridecount0\ls4}{\listoverride\listid1171138679\listoverridecount0\ls5}{\listoverride\listid1450277994\listoverridecount0\ls6}{\listoverride\listid1554075707
\listoverridecount0\ls7}{\listoverride\listid510485644\listoverridecount0\ls8}}{\*\rsidtbl \rsid271987\rsid359105\rsid666642\rsid816738\rsid1525840\rsid1603635\rsid1969772\rsid2046641\rsid2305787\rsid2709274\rsid3671454\rsid3676517\rsid4354438\rsid4526467
\rsid4994585\rsid5789519\rsid5837005\rsid6256047\rsid7174776\rsid7887321\rsid8224139\rsid8805616\rsid9056608\rsid10249159\rsid11161823\rsid11355195\rsid11490792\rsid11671262\rsid12137269\rsid12143246\rsid12719947\rsid13004752\rsid13067695\rsid13243293
\rsid13964933\rsid14225522\rsid14639621\rsid15414356\rsid15418784\rsid15805435\rsid16265966}{\*\generator Microsoft Word 11.0.0000;}{\info{\operator sbehrens}{\creatim\yr2008\mo7\dy4\hr18\min27}{\revtim\yr2008\mo8\dy8\hr16\min51}{\version36}{\edmins194}
{\nofpages13}{\nofwords2645}{\nofchars15082}{\nofcharsws17692}{\vern24613}{\*\password 00000000}}{\*\xmlnstbl {\xmlns1 http://schemas.microsoft.com/office/word/2003/wordml}{\xmlns2 urn:schemas-microsoft-com:office:smarttags}}
\paperw12240\paperh15840\margl1440\margr1440\margt1440\margb1440\gutter0\ltrsect 
\widowctrl\ftnbj\aenddoc\donotembedsysfont0\donotembedlingdata1\grfdocevents0\validatexml0\showplaceholdtext0\ignoremixedcontent0\saveinvalidxml0\showxmlerrors0\horzdoc\dghspace120\dgvspace120\dghorigin1701\dgvorigin1984\dghshow0\dgvshow3
\jcompress\viewkind1\viewscale100\rsidroot12719947 \fet0{\*\wgrffmtfilter 2450}\ilfomacatclnup0\ltrpar \sectd \ltrsect\linex0\sectdefaultcl\sftnbj {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl2
\pnucltr\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang {\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl6
\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang 
{\pntxtb (}{\pntxta )}}\pard\plain \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs22\alang1025 \ltrch\fcs0 \f38\fs22\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \ab\af1\afs24 \ltrch\fcs0 
\b\f1\fs28\insrsid1603635\charrsid11490792 PHP }{\rtlch\fcs1 \ab\af1\afs24 \ltrch\fcs0 \b\f1\fs28\insrsid16265966\charrsid11490792 EvE }{\rtlch\fcs1 \ab\af1\afs24 \ltrch\fcs0 \b\f1\fs28\insrsid1603635\charrsid11490792 API Library}{\rtlch\fcs1 \af1\afs20 
\ltrch\fcs0 \f1\insrsid1603635\charrsid11490792 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\insrsid1603635\charrsid11490792 Requirements}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\insrsid1603635\charrsid11490792 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 
\par For this library to be useful, you will need:
\par 
\par - A web server that runs PHP5. }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid2709274 Some functions require PHP 5.1.3 or greater; the recommended version would be a recent version of PHP 5.2.x. }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 
\f1\fs20\insrsid1603635 This library uses SimpleXML. It is possible to replace that with another XML parser and run it on PHP4 - feel free to branch the code :)
\par - A web server that does not block the fsockopen() function. Unfortunately, many free PHP5 webhosts do block that function.
\par - A good deal of patience :)
\par 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\insrsid1603635\charrsid11490792 Overview}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\insrsid1603635\charrsid11490792 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 
\par PHP API grabs XML data through the EvE API, caches it locally in a text file, and parses the XML into an array for further processing by you.
\par 
\par The caching is a bit naive, but on the upside, very simple to maintain - no DB administration needed. There is no "cleanup" of the cache directory in this code at present. If you are going to use this API to grab data for many different users, that may 
become a small nuisance.
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \b\f1\insrsid16265966\charrsid11490792 Installation
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid16265966 
\par Copy the contents of the eveapi directory into a directory on your server. For purposes of this document, the examples will assume that you copied everything into \lquote ./classes/eveapi\rquote .
\par 
\par The EvE API library defaults to caching its fetches, in accordance with CCP\rquote s wishes. The default caching directory is \lquote ./xmlcache/\rquote .
\par 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\insrsid1603635\charrsid11490792 Basic operation}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\insrsid1603635\charrsid11490792 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 
\par You will need to use at least two includes in your code: 'class.api.php', which has the core class and does all the actual fetching of d
ata, caching, and so on; and one or more of the parsing class files. In order to choose a character, for example, you'd need 'class.charselect.php'.
\par 
\par require_once('./classes/}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid16265966 eve}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 api/class.api.php');
\par require_once('./classes/}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid16265966 eve}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 api/class.charselect.php');
\par 
\par You'll also want the API User ID, API Key, and the character name. Those could be hardcoded or entered on the fly, stored in a DB, whatever. I'll hardcode them here. You get them from http://myeve.eve-online.com/api/, of course.
\par 
\par $apiuser = '12345'; // User ID
\par $apipass = '67890'; // API Key - limited or full, depending on what you intend to fetch
\par $mychar = 'Win Sauce'; // Character name
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid5837005 Time to initialize a new Api object}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 
. You'll want to decide on whether to debug; and you'll set the credentials. Note we just use User ID and API Key to start. You can only fetch rather limited things with that combo, but that's how we need to start out.
\par 
\par $api = new Api();
\par $api->debug(true);}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid16265966  // When testing and debugging your code \endash  comment out once everything\rquote s working}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 
\par $api->setCredentials($apiuser,$apipass);
\par \page 
\par Alright, now we'll go fetch us the character ID for that character name, and we'll grab the corporation ID while we're at it. Fetchi
ng anything in the PHP API Library is done in two steps: Get the raw XML, then parse it using a parser class. The function name in Api and in the parsing class is identical, by convention in this library.
\par 
\par $apicharsxml = $api->getCharacters();
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid2046641 $apichars = Characters}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 ::getCharacters($apicharsxml);
\par 
\par That was simple enough. Now step through the $apichars array to find the character we'll use.
\par 
\par foreach($apichars as $index => $thischar)
\par \{
\par \tab if($thischar['charname']==$mychar)
\par \tab \{
\par \tab \tab $apichar=$thischar['charid'];
\par \tab \tab $apicorp=$thischar['corpid'];
\par \tab \}
\par \}
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid2046641 Really what you\rquote d do is present the existing characters to a user to choose from, but this works for a demonstration example.
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 At 
this point, you can continue by grabbing more data, using the $apichar variable. For example, to get a list of the members of your corporation (which assumes an include of class.membertrack.php - remember, each API function has a separate parsing class):

\par 
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0\pararsid5837005 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid5837005 // The following fetch will need our character ID - so set it, now that we have it
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 $api->setCredentials($apiuser,$apipass,$apichar); }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid5837005 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 $membersxml = $api->getMemberTracking();
\par $members = MemberTrack}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid2046641 ing::getMemberTracking}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 ($membersxml);
\par 
\par 
\par I trust you get the idea.}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid2046641 
 In a nutshell, you use a one-two-punch of grabbing the XML, and then parsing the XML. The names of the parsing and XML grabbing functions are identical, and the name of the parsing class matches the function minus the \'93get\'94. }{\rtlch\fcs1 
\af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid11671262 
\par Example}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid2046641 : api->getWalletJournal and WalletJournal::getWalletJournal.
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 
\par Lastly, if you had debug on and you want to output the debug messages, use this:
\par 
\par $api->printErrors();
\par 
\par There's an example api}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid2046641 -}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 test}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid2046641 ing}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 
\f1\fs20\insrsid1603635 .php file included in this release, which shows some of the functions of the API. It fetches hard-coded user ID and API key from config.php, so edit config.php before you upload the code to your server for testing.
\par \page 
\par }{\rtlch\fcs1 \af1 \ltrch\fcs0 \b\f1\fs24\insrsid12143246\charrsid11490792 Control functions for the EvE API PHP library
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid12143246 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid3676517 The examples in this section assume that you created a variable $api for the Api class, like so:
\par 
\par $api = new Api();
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \b\f1\insrsid3676517\charrsid11490792 setCredentials(userid, apikey, charid)
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid3676517 
\par Set the user ID, API key (full or limited) and character ID to be used in subsequent API operations.
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1525840 \line Returns \'93true\'94 if successful, and \'93false}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid13067695 \'94 if not.}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid3676517 

\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid13067695 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid3676517 $api->setCredentials(userid, apikey, charid);
\par 
\par \'93userid\'94 and \'93apikey\'94 are required parameters, while \'93charid\'94 is optional.
\par Note that \'93charid\'94 is a numeric value. You can grab it using getCharacters \endash  see above example, please \endash  or using getCharacterID(name);. That latter one\rquote s not implemented yet, though, so natch.
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \b\f1\insrsid13067695\charrsid11490792 d}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \b\f1\insrsid3676517\charrsid11490792 ebug(}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \b\f1\insrsid13067695\charrsid11490792 bool)}{\rtlch\fcs1 
\af1\afs20 \ltrch\fcs0 \b\f1\insrsid3676517\charrsid11490792 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid13067695 
\par Set debug output to \'93true\'94 or \'93false\'94. It defaults to \'93false\'94.
\par 
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0\pararsid1525840 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1525840 Returns \'93true\'94 if successful, and \'93false\'94 if not.
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid13067695 
\par $api->debug(true);
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \b\f1\insrsid13067695\charrsid11490792 cache(bool)
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid13067695 
\par Set caching to \'93true\'94 or \'93false\'94. It defaults to \'93true\'94.
\par 
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0\pararsid1525840 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1525840 Returns \'93true\'94 if successful, and \'93false\'94 if not.
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid13067695 
\par $api->cache(false);
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \b\f1\insrsid13067695\charrsid11490792 setCacheDir(dir)
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid13067695 
\par Set the caching directory to a value. It defaults to \'93./xmlcache\'94.
\par 
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0\pararsid1525840 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1525840 Returns \'93true\'94 if successful, and \'93false\'94 if not.
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid13067695 
\par $api->setCacheDir(\'93/var/tmp/dont-live-in-my-homedir-you-bum/\'94);
\par }{\rtlch\fcs1 \ab\af1 \ltrch\fcs0 \b\f1\insrsid13067695 
\par }{\rtlch\fcs1 \ab\af1 \ltrch\fcs0 \b\f1\insrsid1525840 setTimeTolerance(tolerance)
\par 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1525840 Set the amount of time in minutes that the API functions will wait after CCP\rquote s \'93cachedUntil\'94
 time has expired before attempting to call an API function again instead of delivering from cache. Default is 5 minutes. Used to allow some leeway in your server\rquote s clock being \'93fast\'94 compared to CCP\rquote s clock.
\par 
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0\pararsid359105 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid359105 Returns \'93true\'94 if successful, and \'93false\'94 if not.
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \ab\af1 \ltrch\fcs0 \b\f1\insrsid359105 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid359105 $api->setTimeTolerance(10); // 5 minutes, pshaw, we need 10}{\rtlch\fcs1 \ab\af1 \ltrch\fcs0 \b\f1\insrsid1603635 \page }{\rtlch\fcs1 \ab\af1 \ltrch\fcs0 \b\f1\insrsid13067695 
\par }{\rtlch\fcs1 \ab\af1 \ltrch\fcs0 \b\f1\fs24\insrsid1603635\charrsid11490792 Implemented EvE API functions}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 
\par 
\par See the very handy API index at http://wiki.eve-id.net/APIv2_Page_Index for EvE server requirements for each API function and sample output, please.
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid13067695 Note that all of the parsing functions have}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid6256047  an}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid13067695  optional \'93timeout
\'94 parameter. \'93timeout\'94 is the time to cache the data}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid11161823  in minutes}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid6256047 
. By default, functions will cache for a time specified by CCP in the returned data \endash  with the current exception of WalletJournal and WalletTransactions, which default to 65 minutes because CCP\rquote s \'93cachedUntil\'94 value
 for these is broken.}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid13067695 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid15418784 
\par You can use \'93print_r($data);\'94 to print the raw array data of any function, if you need to see how the array is formatted. If you are going to do that, a \'93}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid15418784\charrsid15418784 
header("Content-type: text/plain");}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid15418784 \'94 might help to keep the formatting \endash  though that\rquote ll screw up any HTML formatting on your page, of course. \'93For testing purposes only\'94.

\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid13067695 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\insrsid1603635\charrsid11490792 Account Balances}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\insrsid1603635\charrsid11490792 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 
\par }\pard \ltrpar\qj \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0\pararsid7174776 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 Grab the Account Balance for either the character, or the corp the character belongs to.
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid7887321 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid15418784 Returns an array if successful, and \'93null\'94 if not.
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid1603635\charrsid11490792 Include needed:
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 
\par require_once('./classes/}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid11161823 eve}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 api/class.balances.php');
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid1603635\charrsid11490792 Authentication needed:
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 
\par This needs the character ID to work.
\par 
\par $api->setCredentials($apiuser,$apipass,$apichar);
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid1603635\charrsid11490792 Fetching and parsing:
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 
\par $dataxml = $a}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid13067695 pi->getAccountBalance(}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid14639621 [}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid13067695 corp-bool}{\rtlch\fcs1 
\af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid14639621 ]}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid13067695 ,[timeout]}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 );}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid13067695 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 $data = }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid7887321 Account}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 Balance::getAccountBalance($dataxml);
\par 
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f3\fs20\insrsid13067695 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ltrpar\qj \fi-360\li720\ri0\nowidctlpar\wrapdefault\faauto\ls7\rin0\lin720\itap0\pararsid7174776 {\rtlch\fcs1 \af1\afs20 
\ltrch\fcs0 \f1\fs20\insrsid13067695 \'93corp-bool\'94 is \'93true\'94 if you wish to fetch for corp, and \'93false\'94 if you wish to fetch for character.}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid14639621  It defaults to \'93false\'94.}{
\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 \page }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid13067695 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid11161823 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\insrsid1603635\charrsid11490792 {\*\xmlopen\xmlns2{\factoidname City}}{\*\xmlopen\xmlns2{\factoidname place}}Alliance{\*\xmlclose}{\*\xmlclose} List}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 
\f1\insrsid1603635\charrsid11490792 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 
\par This is a global fetch, no authentication is actually needed. An APIv1 function that Rynlam added to the mix. Handy for getting all of the member corp IDs of a particular alliance, which can then be used when fetching the corp sheet data.
\par 
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0\pararsid15418784 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid15418784 Returns an array if successful, and \'93null\'94 if not.
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid15418784 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid1603635\charrsid11490792 Include needed:
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 
\par require_once('./classes/}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid11161823 eve}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 api/class.alliancelist.php');
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid1603635\charrsid11490792 Authentication needed:
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 
\par None
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid1603635\charrsid11490792 Fetching and parsing:
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 
\par $dataxml = $api->getAllianceList(}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid816738 [timeout]}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 );
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid7887321 $data = AllianceL}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 ist::getAllianceList($dataxml);
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid11161823 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\insrsid1603635\charrsid11490792 Asset List}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\insrsid1603635\charrsid11490792 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 
\par }\pard \ltrpar\qj \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0\pararsid7174776 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid7174776 
Grab the Asset List for either the character, or the corp the character belongs to. In order to fetch for corp, the character has}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid2305787  to have the \'93Director\'94 or \'93CEO\'94 role in the corp.}{
\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid7174776 
\par 
\par Returns an array if successful, and \'93null\'94 if not.
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid7174776\charrsid11490792 Include needed:
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid7174776 
\par require_once('./classes/eveapi/class.}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid4354438 assetlist}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid7174776 .php');
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid7174776\charrsid11490792 Authentication needed:
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid7174776 
\par This}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid5789519  needs the character ID }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid666642 and full API key.}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid7174776 
\par 
\par $api->setCredentials($apiuser,$apipass,$apichar);
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid7174776\charrsid11490792 Fetching and parsing:
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid7174776 
\par $dataxml = $api->get}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid3671454 AssetList}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid7174776 ([corp-bool],[timeout]);
\par $data = }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid3671454 AssetList}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid7174776 ::get}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid3671454 AssetList}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 
\f1\fs20\insrsid7174776 ($dataxml);
\par 
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0\pararsid7174776 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid7174776 \'93corp-bool\'94 is \'93true\'94 if you wish to fetch for corp, and \'93false\'94
 if you wish to fetch for character. It defaults to \'93false}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid9056608 \page }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\insrsid1603635\charrsid11490792 Character List (on account)}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\insrsid1603635\charrsid11490792 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 
\par Needed to get the char ID, whithout which a lot of the other fetches don't work.
\par 
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0\pararsid15418784 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid15418784 Returns an array if successful, and \'93null\'94 if not.
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid15418784 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid1603635\charrsid11490792 Include needed:
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 
\par require_once('./classes/}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid11161823 eve}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 api/class.charselect.php');
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid1603635\charrsid11490792 Authentication needed:
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 
\par User ID and API Key
\par 
\par $api->setCredentials($apiuser,$apipass);
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid1603635\charrsid11490792 Fetching and parsing:
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid11161823 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 $dataxml = $api->getCharacters(}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid816738 [timeout]}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 );
\par $data = }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid7887321 Characters}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 ::getCharacters($dataxml);
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid11161823 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\insrsid1603635\charrsid11490792 Character Sheet}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\insrsid1603635\charrsid11490792 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid16265966 A detailed character sheet for one of your characters.}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid16265966 
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0\pararsid15418784 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid15418784 Returns an array if successful, and \'93null\'94 if not.
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid15418784 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid16265966\charrsid11490792 Include needed:
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid16265966 
\par require_once(\lquote ./classes/}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid11161823 eveapi/}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid14225522 class.}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid11161823 charactersheet.php
\rquote );}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid16265966 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid11161823 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid11161823\charrsid11490792 Authentication needed:
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid11161823 
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0\pararsid15418784 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid15418784 This needs the character ID to work.
\par 
\par $api->setCredentials($apiuser,$apipass,$apichar);
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid15418784 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid15418784\charrsid11490792 Fetching and parsing:
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid15418784 
\par $dataxml=$api->getCharacterSheet([timeout]);
\par $data = CharacterSheet::getCharacterSheet($dataxml);}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0\pararsid816738 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid15418784 
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid15418784 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\insrsid1603635\charrsid11490792 Conquerable Station/Outpost List }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\insrsid1603635\charrsid11490792 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 
\par An APIv2 function that has not been implemented yet. Have at it!
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid9056608 \page }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 
\par }{\rtlch\fcs1 \ab\af1 \ltrch\fcs0 \b\f1\insrsid1603635\charrsid11490792 Corporation Sheet }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid1603635\charrsid11490792 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0\pararsid1969772 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1969772 
A detailed corporation sheet for the corporation you are a member of. Can also be used to see information about corporations in an alliance.
\par 
\par Returns an array if successful, and \'93null\'94 if not.
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid1969772\charrsid11490792 Include needed:
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1969772 
\par require_once(\lquote ./classes/eveapi/}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid14225522 class.corporation}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1969772 sheet.php\rquote );
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid1969772\charrsid11490792 Authentication needed:
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1969772 
\par This needs the character ID to work. A CEO or Director will see more data than a member.
\par 
\par $api->setCredentials($apiuser,$apipass,$apichar);
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid1969772\charrsid11490792 Fetching and parsing:
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1969772 
\par $dataxml=$api->getCorporationShee}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid816738 t([corpid],[timeout]}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1969772 );
\par $data = CorporationSheet::getCorporationSheet($dataxml);
\par 
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f3\fs20\insrsid1969772 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ltrpar\ql \fi-360\li720\ri0\nowidctlpar\wrapdefault\faauto\ls3\rin0\lin720\itap0\pararsid1969772 {\rtlch\fcs1 \af1\afs20 
\ltrch\fcs0 \f1\fs20\insrsid1969772 \'93c}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid11355195 orpid\'94 is to be used if you wish to see information about a corporation in an alliance. If omitted, information about your character\rquote 
s corp is returned.}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid11355195\charrsid15805435 
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0\pararsid816738 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1969772 
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \ab\af1 \ltrch\fcs0 \b\f1\insrsid1603635\charrsid11490792 Error List }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid1603635\charrsid11490792 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 
\par An APIv2 function that has not been implemented yet. Have at it!
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid14639621 
\par }{\rtlch\fcs1 \ab\af1 \ltrch\fcs0 \b\f1\insrsid1603635\charrsid11490792 Industry Jobs }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid1603635\charrsid11490792 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 
\par }\pard \ltrpar\qj \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0\pararsid13964933 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid13964933 Grab the list of Industry Jobs for either the character, or the corp the character belongs to.}{
\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid666642  To fetch for corp, the character has to have the \lquote Factory Manager\rquote  role.}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid13964933 
\par 
\par Returns an array if successful, and \'93null\'94 if not.
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid13964933\charrsid11490792 Include needed:
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid13964933 
\par require_once('./classes/eveapi/class.industryjobs.php');
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid13964933\charrsid11490792 Authentication needed:
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid13964933 
\par This}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid4994585  needs the character ID and full API key.}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid13964933 
\par 
\par $api->setCredentials($apiuser,$apipass,$apichar);
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid13964933\charrsid11490792 Fetching and parsing:
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid13964933 
\par $dataxml = $api->getIndustryJobs([corp-bool],[timeout]);
\par $data = IndustryJobs::getIndustryJobs($dataxml);
\par 
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0\pararsid13964933 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid13964933 \'93corp-bool\'94 is \'93true\'94 if you wish to fetch for corp, and \'93false\'94
 if you wish to fetch for character. It defaults to \'93false}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid4526467 \'94}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid13964933 
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 
\par 
\par }{\rtlch\fcs1 \ab\af1 \ltrch\fcs0 \b\f1\insrsid1603635\charrsid11490792 Journal Entries}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid1603635\charrsid11490792  
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0\pararsid14639621 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid14639621 A detailed wallet journal (like the one 
in the EvE UI) showing transactions up to one week back. Returns a maximum of 1000 entries in one go, but can be run multiple times to get more than 1000 entries, as long as they are not older than one week.
\par 
\par CCP recommends to run this function, and run it again until it returns less than 1000 entries, for simplicity\rquote s sake.
\par 
\par Returns an array if successful, and \'93null\'94 if not.
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid14639621\charrsid11490792 Include needed:
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid14639621 
\par require_once(\lquote ./classes/eveapi/}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid14225522 class.}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid14639621 walletjournal.php\rquote );
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid14639621\charrsid11490792 Authentication needed:
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid14639621 
\par This needs the character ID to work. If used for corp, you\rquote ll need to have the \'93junior accountant\'94 role in that corp.
\par 
\par $api->setCredentials($apiuser,$apipass,$apichar);
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid14639621\charrsid11490792 Fetching and parsing:
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid14639621 
\par $dataxml=$api->getWalletJournal([refid],[}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid11490792 corp-bool}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid14639621 ],}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid11490792 [accountkey],}{
\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid816738 [timeout]}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid14639621 );
\par $data = }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid11490792 WalletJournal}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid14639621 ::get}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid11490792 WalletJournal}{\rtlch\fcs1 \af1\afs20 
\ltrch\fcs0 \f1\fs20\insrsid14639621 ($dataxml);
\par 
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f3\fs20\insrsid11490792 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ltrpar\ql \fi-360\li720\ri0\nowidctlpar\wrapdefault\faauto\ls2\rin0\lin720\itap0\pararsid11490792 {\rtlch\fcs1 \af1\afs20 
\ltrch\fcs0 \f1\fs20\insrsid11490792 \'93refid\'94 \endash  if specified, you will get up to 1000 entries }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \i\f1\fs20\insrsid11490792\charrsid11490792 before}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid11490792 
 that refid. If not specified, you will get the newest entries, up to 1000.
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f3\fs20\insrsid11490792 \loch\af3\dbch\af0\hich\f3 \'b7\tab}\'93corp-bool\'94 is \'93true\'94 if you wish to fetch for corp, and \'93false\'94 if yo
u wish to fetch for character. It defaults to \'93false\'94.
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f3\fs20\insrsid11490792 \loch\af3\dbch\af0\hich\f3 \'b7\tab}\'93accountkey\'94 defaults to \'931000\'94
, which is the corp master wallet or the char wallet. Other possible values are 1001 through 1006, for the available corp wallet divisions.
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f3\fs20\insrsid816738 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid816738 \'93timeout\'94 defaults to 65 minutes, because the \'93cachedUntil\'94
 value for this function is broken as of Empyrian Age 1.0.1}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid11490792 
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 
\par 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\insrsid1603635\charrsid1603635 Kill Log (Killmails) }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\insrsid1603635\charrsid1603635 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 
\par An APIv2 function that has not been implemented yet. Have at it!
\par 
\par \page 
\par 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\insrsid1603635\charrsid11490792 Market Transactions }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\insrsid1603635\charrsid11490792 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0\pararsid11490792 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid11490792 A detailed view of wallet mark
et transactions (like the one in the EvE UI) showing transactions up to one week back. Returns a maximum of 1000 entries in one go, but can be run multiple times to get more than 1000 entries, as long as they are not older than one week.
\par 
\par CCP recommends to run this function, and run it again until it returns less than 1000 entries, for simplicity\rquote s sake.
\par 
\par Returns an array if successful, and \'93null\'94 if not.
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid11490792\charrsid11490792 Include needed:
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid11490792 
\par require_once(\lquote ./classes/eveapi/}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid14225522 class.}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid11490792 transactions.php\rquote );
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid11490792\charrsid11490792 Authentication needed:
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid11490792 
\par This needs the character ID to work. If used for corp, you\rquote ll need to have the \'93junior accountant\'94 role in that corp.
\par 
\par $api->setCredentials($apiuser,$apipass,$apichar);
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid11490792\charrsid11490792 Fetching and parsing:
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid11490792 
\par $dataxml=$api->getWalletTransactions([transid],[corp-bool],[accountkey],[timeout]);
\par $data = WalletTransactions::getWalletTransactions($dataxml);
\par 
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f3\fs20\insrsid11490792 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ltrpar\ql \fi-360\li720\ri0\nowidctlpar\wrapdefault\faauto\ls1\rin0\lin720\itap0\pararsid11490792 {\rtlch\fcs1 \af1\afs20 
\ltrch\fcs0 \f1\fs20\insrsid11490792 \'93transid\'94 \endash  if specified, you will get up to 1000 entries }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \i\f1\fs20\insrsid11490792\charrsid11490792 before}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 
\f1\fs20\insrsid11490792  that transid. If not specified, you will get the newest entries, up to 1000.
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f3\fs20\insrsid11490792 \loch\af3\dbch\af0\hich\f3 \'b7\tab}\'93corp-bool\'94 is \'93true\'94 if you wish to fetch for corp, and \'93false\'94
 if you wish to fetch for character. It defaults to \'93false\'94.
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f3\fs20\insrsid11490792 \loch\af3\dbch\af0\hich\f3 \'b7\tab}\'93accountkey\'94 defaults to \'931000\'94
, which is the corp master wallet or the char wallet. Other possible values are 1001 through 1006, for the available corp wallet divisions.
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f3\fs20\insrsid13243293 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ltrpar\ql \fi-360\li720\ri0\nowidctlpar\wrapdefault\faauto\ls1\rin0\lin720\itap0\pararsid13243293 {\rtlch\fcs1 \af1\afs20 
\ltrch\fcs0 \f1\fs20\insrsid13243293 \'93timeout\'94 defaults to 65 minutes, because the \'93cachedUntil\'94 value for this function is broken as of Empyrian Age 1.0.1}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid11490792\charrsid13243293 
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 
\par 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\insrsid1603635\charrsid15805435 Market Orders }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\insrsid1603635\charrsid15805435 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 
\par An APIv2 function that has not been implemented yet. Have at it!
\par 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid15805435 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\insrsid1603635\charrsid15805435 Map: Jumps}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635  
\par 
\par An APIv2 function that has not been implemented yet. Have at it!
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid15805435 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\insrsid1603635\charrsid15805435 Map: Kills }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\insrsid1603635\charrsid15805435 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 
\par An APIv2 function that has not been implemented yet. Have at it!
\par 
\par \page }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid15805435 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\insrsid1603635\charrsid15805435 Map: Sovereignty}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\insrsid1603635\charrsid15805435  
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 
\par An APIv1 function that has not been implemented yet. Have at it!
\par 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid15805435 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\insrsid1603635\charrsid15805435 Name to ID Conversion}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\insrsid1603635\charrsid15805435  
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 
\par An APIv1 function that has not been implemented yet. Have at it!
\par 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid15805435 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\insrsid1603635\charrsid15805435 ID to Name Conversion (undocumented)}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\insrsid1603635\charrsid15805435 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 
\par An APIv1 function that has not been implemented yet. Have at it!
\par 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid15805435 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\insrsid1603635\charrsid15805435 ID to Character Portrait }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\insrsid1603635\charrsid15805435 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 
\par An APIv1 function that has not been implemented yet. Have at it!
\par 
\par 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\insrsid1603635\charrsid15805435 RefTypes List }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\insrsid1603635\charrsid15805435 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0\pararsid15805435 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid15805435 
This is a global fetch, no authentication is actually needed. An APIv1 function that gets a complete list of refTypes, which are needed to map the data returned by getWalletJournal and getWalletTransactions into types of transactions, such as \'93
Player Donation\'94.
\par 
\par Returns an array if successful, and \'93null\'94 if not.
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid15805435\charrsid11490792 Include needed:
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid15805435 
\par require_once('./classes/eveapi/class.generic.php');
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid15805435\charrsid11490792 Authentication needed:
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid15805435 
\par None
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid15805435\charrsid11490792 Fetching and parsing:
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid15805435 
\par $dataxml = $api->getRefTypes([timeout]);
\par $data = RefTypes::getRefTypes($dataxml);
\par 
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 \page 
\par 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\insrsid1603635\charrsid14225522 Skill in Training }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\insrsid1603635\charrsid14225522 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0\pararsid14225522 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid14225522 Returns the currently training skill for one of your characters. Use the array returned by \'93
getSkillTree\'94 to find the name of the skill that corresponds to the id that will be returned.
\par 
\par Returns an array if successful, and \'93null\'94 if not.
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid14225522\charrsid11490792 Include needed:
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid14225522 
\par require_once(\lquote ./classes/eveapi/class.charactersheet.php\rquote );
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid14225522\charrsid11490792 Authentication needed:
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid14225522 
\par This needs the character ID to work.
\par 
\par $api->setCredentials($apiuser,$apipass,$apichar);
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid14225522\charrsid11490792 Fetching and parsing:
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid14225522 
\par $dataxml=$api->getSkillInTraining([timeout]);
\par $data = SkillInTraining::getSkillInTraining($dataxml);
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 
\par 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\insrsid1603635\charrsid14225522 Skill Tree}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\insrsid1603635\charrsid14225522 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid14225522 Returns the complete EvE-Online Skill Tree. Useful, for example, for mapping the id of SkillInTraining to a skill name.
\par 
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0\pararsid14225522 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid14225522\charrsid11490792 Include needed:
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid14225522 
\par require_once('./classes/eveapi/class.generic.php');
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid14225522\charrsid11490792 Authentication needed:
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid14225522 
\par None
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid14225522\charrsid11490792 Fetching and parsing:
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid14225522 
\par $dataxml = $api->getSkillTree([timeout]);
\par $data = SkillTree::getSkillTree($dataxml);
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0\pararsid13243293 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid14225522 
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 
\par \page 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\insrsid1603635\charrsid14225522 Starbase (POS) Details}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\insrsid1603635\charrsid14225522 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0\pararsid13004752 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid13004752 Returns details about a particular starbase that belongs to your corp. You\rquote 
ll need to have CEO or Director roles to get this list.
\par 
\par Returns an array if successful, and \'93null\'94 if not.
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid13004752\charrsid11490792 Include needed:
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid13004752 
\par require_once(\lquote ./classes/eveapi/class.starbases.php\rquote );
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid13004752\charrsid11490792 Authentication needed:
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid13004752 
\par This needs the character ID to work, and a full API key.
\par 
\par $api->setCredentials($apiuser,$apipass,$apichar);
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid13004752\charrsid11490792 Fetching and parsing:
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid13004752 
\par $dataxml=$api->}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid13004752\charrsid271987  }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid13004752\charrsid271987 getStarbase}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid13004752 Detail}{\rtlch\fcs1 
\af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid13004752\charrsid271987  }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid13004752 ($id,[timeout]);
\par $data = }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid13004752\charrsid271987 Starbase}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid13004752 Detail::}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid13004752\charrsid271987  }{\rtlch\fcs1 \af1\afs20 
\ltrch\fcs0 \f1\fs20\insrsid13004752\charrsid271987 getStarbase}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid13004752 Detail}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid13004752\charrsid271987  }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 
\f1\fs20\insrsid13004752 ($dataxml);
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid14225522 
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid13004752 \hich\af1\dbch\af0\loch\f1 -\tab}}\pard \ltrpar\ql \fi-360\li720\ri0\nowidctlpar\wrapdefault\faauto\ls8\rin0\lin720\itap0\pararsid13004752 {\rtlch\fcs1 \af1\afs20 
\ltrch\fcs0 \f1\fs20\insrsid13004752 id \endash  This is the ID of the POS as returned by getStarbaseList
\par }\pard \ltrpar\ql \li720\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin720\itap0\pararsid13004752 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid13004752 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid13004752\charrsid13004752 
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\insrsid1603635\charrsid14225522 Starbase (POS) List}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\insrsid1603635\charrsid14225522 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0\pararsid8805616 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid8805616 Returns a list of starbases that belong to your corp. You\rquote ll need }{\rtlch\fcs1 \af1\afs20 
\ltrch\fcs0 \f1\fs20\insrsid10249159 to have CEO or Director roles to get this list.}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid8805616 
\par 
\par Returns an array if successful, and \'93null\'94 if not.
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid8805616\charrsid11490792 Include needed:
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid8805616 
\par require_once(\lquote ./classes/eveapi/class.}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid10249159 starbases}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid8805616 .php\rquote );
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid8805616\charrsid11490792 Authentication needed:
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid8805616 
\par This}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid10249159  needs the character ID to work, and a full API key.}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid8805616 
\par 
\par $api->setCredentials($apiuser,$apipass,$apichar);
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid8805616\charrsid11490792 Fetching and parsing:
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid8805616 
\par $dataxml=$api->}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid271987\charrsid271987  }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid271987\charrsid271987 getStarbaseList }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid8805616 ([timeout]);
\par $data = }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid271987\charrsid271987 StarbaseList}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid8805616 ::}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid271987\charrsid271987  }{\rtlch\fcs1 \af1\afs20 
\ltrch\fcs0 \f1\fs20\insrsid271987\charrsid271987 getStarbaseList }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid8805616 ($dataxml);
\par 
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid14225522 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\insrsid1603635\charrsid14225522 Factional Warfare Stats}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\insrsid1603635\charrsid14225522 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 
\par An APIv2 function that has not been implemented yet. Have at it!
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid14225522 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\insrsid1603635\charrsid14225522 Factional Warfare Top 100 Stats}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\insrsid1603635\charrsid14225522 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 
\par An APIv2 function that has not been implemented yet. Have at it!
\par 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid14225522 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\insrsid1603635\charrsid14225522 Factional Warfare Occupancy Map}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\insrsid1603635\charrsid14225522  }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1603635 
\par 
\par An APIv2 function that has not been implemented yet. Have at it!
\par 
\par }}